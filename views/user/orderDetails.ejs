<%-include("../../views/partials/user/header.ejs")%>

    <div class="container-fluid mb-5">
        <div class="row vh-100">

            <!-- Left Section: Order Details -->
            <div class="col-md-7 p-4 order-details-section">
                
        

                <!-- Scrollable Order Details -->
                <div class="order-content">

                    <!-- Order Status -->
                    <div class="tracking-container">
                        <h6 class="tracking-title">Order Tracking: <span class="order-number">#<%= readableId %></span></h6>
                    
                        <% if (orderData.status === 'cancelled') { %>
                            <div class="status-message cancelled">
                                <p>Your order has been <strong>Cancelled</strong>.</p>
                                <p><%=orderData.cancelReason%></p>
                            </div>
                        <% } else if (orderData.status === 'Return Request') { %>
                            <div class="status-message return-request">
                                <p>Your return request has been <strong>Submitted</strong>. We will process it soon.</p>
                            </div>
                        <% } else if (orderData.status === 'Returned') { %>
                            <div class="status-message returned">
                                <p>Your order has been <strong>Returned</strong>. Refund added to your wallet.</p>
                            </div>
                            <% } else if (orderData.status === 'Return Rejected') { %>
                                <div class="status-message rejected">
                                    <p>Your return request has been <strong>Rejected</strong>.contact our Customer Care.</p>
                                </div>
                            <% } else { %>
                            <div class="tracking-progress">
                                <div class="step" data-status="pending">
                                    <div class="icon">✔</div>
                                    <p>Order Placed</p>
                                </div>
                                <div class="step" data-status="processing">
                                    <div class="icon">✔</div>
                                    <p>Processing</p>
                                </div>
                                <div class="step" data-status="shipped">
                                    <div class="icon">✔</div>
                                    <p>Shipped</p>
                                </div>
                                <div class="step" data-status="delivered">
                                    <div class="icon">✔</div>
                                    <p>Delivered</p>
                                </div>
                            </div>
                        <% } %>
                    </div>
                    
                    <script>
                        document.addEventListener("DOMContentLoaded", function() {
                            const orderStatus = "<%= orderData.status %>"; 
                            const statusSteps = ["pending", "processing", "shipped", "delivered"];
                            let statusIndex = statusSteps.indexOf(orderStatus); // Find the index of the current status
                    
                            document.querySelectorAll(".tracking-progress .step").forEach((step, index) => {
                                if (index <= statusIndex) {
                                    step.classList.add("active-step"); // Highlight steps up to the current one
                                }
                            });
                        });
                    </script>
                    
                    <style>
                        .tracking-container {
                            background: #f8f8f8;
                            padding: 15px;
                            border-radius: 8px;
                            text-align: center;
                            margin: 20px 0;
                        }
                    
                        .tracking-title {
                            font-size: 15px;
                            font-weight: bold;
                            margin-bottom: 10px;
                        }
                    
                        .order-number {
                            color: #4CAF50;
                        }
                    
                        .tracking-progress {
                            display: flex;
                            justify-content: space-between;
                            align-items: center;
                            position: relative;
                            margin: 20px auto;
                            width: 90%;
                            max-width: 600px;
                        }
                    
                        .tracking-progress::before {
                            content: "";
                            position: absolute;
                            width: 100%;
                            height: 4px;
                            background: #ccc;
                            top: 50%;
                            left: 0;
                            transform: translateY(-50%);
                            z-index: 0;
                        }
                    
                        .step {
                            position: relative;
                            z-index: 1;
                            text-align: center;
                            width: 25%;
                        }
                    
                        .icon {
                            width: 35px;
                            height: 35px;
                            line-height: 35px;
                            border-radius: 50%;
                            background: #ccc;
                            color: white;
                            display: inline-block;
                            font-size: 14px;
                            font-weight: bold;
                        }
                    
                        .step p {
                            margin-top: 5px;
                            font-size: 14px;
                        }
                    
                        /* ✅ Highlight active steps */
                        .active-step .icon {
                            background: #4CAF50; /* Green color */
                        }
                    
                        .active-step p {
                            color: #4CAF50;
                            font-weight: bold;
                        }
                    
                        /* Active Line */
                        .tracking-progress .step.active-step::before {
                            content: "";
                            position: absolute;
                            height: 4px;
                            background: #4CAF50;
                            left: 0;
                            top: 50%;
                            width: 100%;
                            transform: translateY(-50%);
                            z-index: -1;
                        }
                    
                        /* Different status messages */
                        .status-message {
                            padding: 10px;
                            border-radius: 5px;
                            font-size: 14px;
                            font-weight: bold;
                            color: white;
                            text-align: center;
                        }
                    
                        .status-message.cancelled {
                            background-color: #d9534f; /* Red */
                        }
                    
                        .status-message.return-request {
                            background-color: #f0ad4e; /* Orange */
                        }
                    
                        .status-message.returned {
                            background-color: #5bc0de; /* Blue */
                        }
                        .status-message.rejected {
                            background-color: #d23a0f; /* Blue */
                        }
                    </style>
                    
                    <!-- Products Ordered -->
                    <h6>Products Ordered</h6>
                    <div class="ordered-items">

                        <div class="product-item">
                            <a class="btn" href="/productDetails?id=<%= orderData.orderedItems[0].product._id %>">
                            <img src="<%=orderData.orderedItems[0].product.productImage[0]%>" class="product-image" alt="<%=orderData.orderedItems[0].product.productName%>">
                            </a>
                            <div>
                                <p class="product-title"><%=orderData.orderedItems[0].product.productName%></p>
                                <small class="text-muted">₹<%=orderData.orderedItems[0].product.salePrice%>| Qty:<%=orderData.totalQuantity%></small>
                            </div>
                        </div>
                    </div>

                </div>

<!-- Cancel Order Section -->
<div class="mb-3">
    <% if (orderData.status !== 'cancelled'&&orderData.status!=='Return Request' &&orderData.status!=='delivered'&&orderData.status!=='Returned'&&orderData.status!=='Return Rejected') { %>
        <button type="button" class="btn btn-danger mx-1" data-bs-toggle="modal" data-bs-target="#cancelModal">
            Cancel Product
          </button>
    <% } %>
</div>
<%if(orderData.status==='Return Request'){%>
    <div class="accordion accordion-flush" id="accordionFlushExample">
        <div class="accordion-item">
          <h2 class="accordion-header" id="flush-headingOne">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseOne" aria-expanded="false" aria-controls="flush-collapseOne">
                What is the return period for a product?
            </button>
          </h2>
          <div id="flush-collapseOne" class="accordion-collapse collapse" aria-labelledby="flush-headingOne" data-bs-parent="#accordionFlushExample">
            <div class="accordion-body"> The return period varies by product category, but generally, items can be returned within 7 to 30 days of purchase..</div>
          </div>
        </div>
        <div class="accordion-item">
          <h2 class="accordion-header" id="flush-headingTwo">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseTwo" aria-expanded="false" aria-controls="flush-collapseTwo">
                What condition should the product be in for a return?
            </button>
          </h2>
          <div id="flush-collapseTwo" class="accordion-collapse collapse" aria-labelledby="flush-headingTwo" data-bs-parent="#accordionFlushExample">
            <div class="accordion-body"> The product must be in its original packaging, unused, and with all accessories and tags intact..</div>
          </div>
        </div>
        <div class="accordion-item">
          <h2 class="accordion-header" id="flush-headingThree">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseThree" aria-expanded="false" aria-controls="flush-collapseThree">
                How will I receive my refund?
            </button>
          </h2>
          <div id="flush-collapseThree" class="accordion-collapse collapse" aria-labelledby="flush-headingThree" data-bs-parent="#accordionFlushExample">
            <div class="accordion-body">  Refunds are processed via the original payment method within 5-7 business days after the return is approved..</div>
          </div>
        </div>
      </div>
      <br><br>
            <%}%>

<div class="mb-3">
<% if (orderData.status === 'delivered') { %>
    <button type="button" class="btn btn-warning mx-1" data-bs-toggle="modal" data-bs-target="#returnModal">
        Return Product
      </button>
<% } %>
<%if(orderData.status==='delivered'||orderData.status==='Returned' || orderData.status==='Return Request') {%>
    <%if(reviewData){%>
        <button id="editReviewButton" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#updateReviewModal">
            Edit Review
        </button>
        
        <%}else{%>
             
            <button type="button" class="btn btn-primary mx-1" data-bs-toggle="modal" data-bs-target="#reviewModal">
                Write a Review
              </button>
    <%}%>
    <%}%>
</div>


<!-- Custom Review Modal -->
<div class="modal fade" id="reviewModal" tabindex="-1" aria-labelledby="reviewModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <!-- Modal Header -->
            <div class="modal-header">
                <h5 class="modal-title" id="reviewModalLabel">Write a Review</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <!-- Modal Body -->
            <div class="modal-body">
                <form id="reviewForm">
                    <!-- Rating Section -->
                    <div class="mb-4">
                        <label for="reviewRatingInput" class="form-label fw-bold">Rating</label>
                        <div class="review-rating-stars">
                            <span class="review-star" data-value="1" data-meaning="Poor">☆</span>
                            <span class="review-star" data-value="2" data-meaning="Fair">☆</span>
                            <span class="review-star" data-value="3" data-meaning="Good">☆</span>
                            <span class="review-star" data-value="4" data-meaning="Very Good">☆</span>
                            <span class="review-star" data-value="5" data-meaning="Excellent">☆</span>
                        </div>
                        <input type="hidden" id="reviewRatingInput" name="rating" required>
                        <!-- Rating Meaning Display -->
                        <div id="ratingMeaningDisplay" class="mt-2 text-muted" style="font-size: 0.9rem;"></div>
                    </div>

                    <!-- Review Text Section -->
                    <div class="mb-3">
                        <label for="reviewTextArea" class="form-label fw-bold">Your Review</label>
                        <textarea class="form-control" id="reviewTextArea" rows="4" placeholder="Share your experience with us..." required></textarea>
                    </div>
                </form>
            </div>

            <!-- Modal Footer -->
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="submitReviewButton">Submit Review</button>
            </div>
        </div>
    </div>
</div>



<div class="modal fade" id="updateReviewModal" tabindex="-1" aria-labelledby="updateReviewModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <!-- Modal Header -->
            <div class="modal-header">
                <h5 class="modal-title" id="updateReviewModalLabel">Edit Your Review</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <!-- Modal Body -->
            <div class="modal-body">
                <form id="updateReviewForm">
                    <!-- Rating Section -->
                    <div class="mb-4">
                        <label for="updateReviewRatingInput" class="form-label fw-bold">Rating</label>
                        <div class="review-rating-stars">
                            <span class="review-star" data-value="1" data-meaning="Poor">☆</span>
                            <span class="review-star" data-value="2" data-meaning="Fair">☆</span>
                            <span class="review-star" data-value="3" data-meaning="Good">☆</span>
                            <span class="review-star" data-value="4" data-meaning="Very Good">☆</span>
                            <span class="review-star" data-value="5" data-meaning="Excellent">☆</span>
                        </div>
                        <input type="hidden" id="updateReviewRatingInput" name="rating" required>
                        <!-- Rating Meaning Display -->
                        <div id="updateRatingMeaningDisplay" class="mt-2 text-muted" style="font-size: 0.9rem;"></div>
                    </div>

                    <!-- Review Text Section -->
                    <div class="mb-3">
                        <label for="updateReviewTextArea" class="form-label fw-bold">Your Review</label>
                        <textarea class="form-control" id="updateReviewTextArea" rows="4" placeholder="Share your experience with us..." required></textarea>
                    </div>
                </form>
            </div>

            <!-- Modal Footer -->
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="updateSubmitReviewButton">Update Review</button>
            </div>
        </div>
    </div>
</div>
<script>
document.addEventListener('DOMContentLoaded', () => {
    const stars = document.querySelectorAll('#updateReviewModal .review-star');
    const ratingInput = document.getElementById('updateReviewRatingInput');
    const ratingMeaningDisplay = document.getElementById('updateRatingMeaningDisplay');
    const reviewTextArea = document.getElementById('updateReviewTextArea');
    const updateSubmitButton = document.getElementById('updateSubmitReviewButton');
    const editReviewButton = document.getElementById('editReviewButton'); // Button to open modal

    // Define rating meanings
    const ratingMeanings = {
        1: "Poor - Very dissatisfied",
        2: "Fair - Somewhat dissatisfied",
        3: "Good - Satisfied",
        4: "Very Good - Highly satisfied",
        5: "Excellent - Extremely satisfied"
    };

    let reviewId = null; // Store the review ID to update

    function fillReviewData(reviewData) {
        if (!reviewData || !reviewData._id) {
            console.warn("No review data found.");
            return;
        }

        reviewId = reviewData._id; // Store the review ID

        // Set review text
        reviewTextArea.value = reviewData.reviewText || '';

        // Set rating stars
        const rating = Number(reviewData.rating) || 0;
        ratingInput.value = rating;

        // Reset and fill stars correctly
        stars.forEach(star => {
            const value = parseInt(star.getAttribute('data-value'));
            star.classList.toggle('filled', value <= rating);
        });

        // Display rating meaning
        ratingMeaningDisplay.textContent = rating ? `${rating} - ${ratingMeanings[rating]}` : "";
    }

    // Event listener for opening the modal
    editReviewButton.addEventListener('click', function () {
        // Ensure reviewData is available before using it
        <% if (reviewData) { %>
            const reviewData = {
                _id: "<%= reviewData._id %>",
                rating: "<%= reviewData.rating %>",
                reviewText: "<%= reviewData.review %>"
            };
            fillReviewData(reviewData);
        <% } else { %>
            console.warn("No review data available.");
        <% } %>
    });

    // Handle star click event
    stars.forEach(star => {
        star.addEventListener('click', () => {
            const value = parseInt(star.getAttribute('data-value'));
            ratingInput.value = value;

            // Update star selection
            stars.forEach(s => {
                s.classList.toggle('filled', parseInt(s.getAttribute('data-value')) <= value);
            });

            // Update rating meaning display
            ratingMeaningDisplay.textContent = `${value} - ${ratingMeanings[value]}`;
        });
    });

    // Send PATCH request when clicking "Update Review"
    updateSubmitButton.addEventListener('click', () => {
        const rating = ratingInput.value;
        const review = reviewTextArea.value;

        if (!rating || !review) {
            Swal.fire({
                title: 'Please provide a rating and review',
                icon: 'warning',
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000
            });
            return;
        }

        editReview(rating, review, reviewId);
    });
});

function editReview(rating, review, id) {
    const orderId = "<%= orderData ? orderData._id : '' %>";

    if (!id) {
        console.error("Review ID is missing.");
        return;
    }

    $.ajax({
        url: "/api/userProfile/orders/orderDetails/editReview",
        type: "PATCH",
        contentType: "application/json",
        data: JSON.stringify({ orderId, rating, review, id }),
        success: function (response) {
            Swal.fire({
                title: 'Review updated successfully!',
                icon: 'success',
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000
            }).then(() => {
                location.reload();
            });
        },
        error: function () {
            Swal.fire({
                title: 'Oops! Something went wrong',
                icon: 'error',
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000
            });
        }
    });
}

</script>




<!-- Custom CSS for the Review Modal -->
<style>
    /* Review Rating Stars Styling */
    .review-rating-stars {
        display: flex;
        gap: 10px;
        margin-top: 8px;
    }

    .review-rating-stars .review-star {
        font-size: 24px;
        color: #ccc;
        cursor: pointer;
        transition: color 0.2s;
    }

    .review-rating-stars .review-star.filled,
    .review-rating-stars .review-star:hover {
        color: #ffc107; /* Yellow color for filled stars */
    }

    /* Modal Custom Styling */
    .modal-content {
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    }

    .modal-header {
        border-bottom: 1px solid #e9ecef;
        padding: 16px;
    }

    .modal-title {
        font-size: 1.25rem;
        font-weight: 600;
    }

    .modal-body {
        padding: 20px;
    }

    .modal-footer {
        border-top: 1px solid #e9ecef;
        padding: 16px;
    }

    .btn-primary {
        background-color: #007bff;
        border: none;
        padding: 8px 16px;
        border-radius: 6px;
    }

    .btn-outline-secondary {
        border: 1px solid #ccc;
        padding: 8px 16px;
        border-radius: 6px;
    }

    .btn-primary:hover {
        background-color: #0056b3;
    }

    .btn-outline-secondary:hover {
        background-color: #f8f9fa;
    }
</style>
<script>

document.addEventListener('DOMContentLoaded', () => {
    const stars = document.querySelectorAll('.review-rating-stars .review-star');
    const ratingInput = document.getElementById('reviewRatingInput');
    const ratingMeaningDisplay = document.getElementById('ratingMeaningDisplay');

    // Define rating meanings
    const ratingMeanings = {
        1: "Poor - Very dissatisfied",
        2: "Fair - Somewhat dissatisfied",
        3: "Good - Satisfied",
        4: "Very Good - Highly satisfied",
        5: "Excellent - Extremely satisfied"
    };

    let selectedRating = 0; // Default rating

    if (stars.length > 0 && ratingInput && ratingMeaningDisplay) {
        stars.forEach(star => {
            star.addEventListener('click', () => {
                selectedRating = star.getAttribute('data-value');
                ratingInput.value = selectedRating;

                // Highlight selected stars
                stars.forEach(s => {
                    s.classList.toggle('filled', s.getAttribute('data-value') <= selectedRating);
                });

                // Display the rating meaning immediately
                ratingMeaningDisplay.textContent = `${selectedRating} - ${ratingMeanings[selectedRating]}`;
            });
        });

        // Set default display text for the meaning section
        ratingMeaningDisplay.textContent = "Select a star to rate";
    }

    // Handle review submission
    const submitReviewButton = document.getElementById('submitReviewButton');
    if (submitReviewButton) {
        submitReviewButton.addEventListener('click', () => {
            const rating = ratingInput?.value;
            const reviewText = document.getElementById('reviewTextArea')?.value.trim();
  if(!rating && !reviewText)
  {
    Swal.fire({
            title:'please give a rating and review ',
            icon: 'warning',
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
        })
                return;
  }
            if (!rating) {
                Swal.fire({
            title:'please select a rating',
            icon: 'warning',
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
        })
                return;
            }

            if (!reviewText) {
                Swal.fire({
            title:'please add the review',
            icon: 'warning',
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
        })
                return;
            }

           addReview(rating,reviewText)
        });
    }
});

</script>



  <!-- Cancel Product Modal -->
  <div class="modal fade" id="cancelModal" tabindex="-1" aria-labelledby="cancelModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="cancelModalLabel">Cancel Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="cancelForm">
                    <!-- Reason Selection -->
                    <div class="mb-3 row align-items-center">
                        <label for="cancelReason" class="col-sm-4 col-form-label fw-bold text-end">Reason for Cancellation:</label>
                        <div class="col-sm-8">
                            <select id="cancelReason" required>
                                <option value="" disabled selected>Select a reason</option>
                                <option value="changed_mind">Changed My Mind</option>
                                <option value="ordered_wrong">Ordered Wrong Product</option>
                                <option value="found_cheaper">Found a Cheaper Alternative</option>
                                <option value="other">Other</option>
                            </select>
                        </div>
                    </div>
                   
                </form>
            </div>

            <div class="modal-footer d-flex justify-content-between">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" onclick="cancelOrder()" class="btn btn-danger" id="submitCancel">Confirm Cancellation</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="returnModal" tabindex="-1" aria-labelledby="returnModalLabel">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <!-- Modal Header -->
            <div class="modal-header">
                <h5 class="modal-title" id="returnModalLabel">Return Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <!-- Modal Body -->
            <div class="modal-body">
                <form id="returnForm">
                    <!-- Reason for Return (Aligned properly) -->
                    <div class="mb-3 row">
                        <label for="returnReason" class="col-sm-4 col-form-label">Reason for Return</label>
                        <div class="col-sm-8">
                            <select  id="returnReason" required>
                                <option value="" disabled selected>Select a reason</option>
                                <option value="damaged">Product Damaged</option>
                                <option value="not_as_described">Not as Described</option>
                                <option value="changed_mind">Changed My Mind</option>
                                <option value="other">Other</option>
                            </select>
                        </div>
                    </div>

                    <!-- Other Reason Text Box (Disabled by default) -->
                    <div class="mb-3 row">
                        <label for="returnOtherText" class="col-sm-4 col-form-label">Other Reason</label>
                        <div class="col-sm-8">
                            <textarea class="form-control" id="returnOtherText" rows="3" placeholder="Enter your reason..."></textarea>
                        </div>
                    </div>
                </form>
            </div>

            <!-- Modal Footer -->
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" onclick="returnOrder()" class="btn btn-warning" id="submitReturn">Submit Return Request</button>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript Fix -->
<script>

    function cancelOrder()
    {
         let orderId='<%=orderData._id%>'

        $.ajax({
            url: "/api/userProfile/orders/orderDetails/cancelOrder",
            type: "PATCH",
            contentType: "application/json",
            data: JSON.stringify({ orderId:orderId }),
            success: function (response) {
                Swal.fire({
            title:'Order cancelled',
            icon: 'success',
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
        }).then(()=>
    {
        location.reload();
    })
            
            },
            error: function () {
                alert("Error cancelling the order. Please try again.");
            }
        });
    }

    function returnOrder()
    {
        let reason;
        const returnReason = document.getElementById("returnReason").value;
        const returnText = document.getElementById("returnOtherText").value.trim();
        if(returnReason==='other' && returnText==='')
       {
        Swal.fire({
            title:'please write the reason',
            icon: 'warning',
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
        })
    }
    else if(returnReason==='' && returnText==='')
    {
        Swal.fire({
            title:'please choose a reason',
            icon: 'warning',
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
        })  
    }
    else
    {
        if(returnReason==='other' && returnText!=='' || returnReason==='' && returnText!=='')
    {
        reason=returnText;
    }
    else
    {
        reason=returnReason;
    }
        console.log(returnReason);
         let orderId='<%=orderData._id%>'
        $.ajax({
            url: "/api/userProfile/orders/orderDetails/returnOrder",
            type: "PATCH",
            contentType: "application/json",
            data: JSON.stringify({ orderId:orderId,reason}),
            success: function (response) {
                Swal.fire({
            title:'Order return request send',
            icon: 'success',
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
        }).then(()=>
    {
        location.reload()
    })
            
            },
            error: function () {
                alert("Error in adding review.");
            }
        });
    }
        
    }
    function addReview(rating,review)
    {
        const orderId='<%=orderData._id%>'

        $.ajax({
            url: "/api/userProfile/orders/orderDetails/addReview",
            type: "post",
            contentType: "application/json",
            data: JSON.stringify({ orderId:orderId,rating,review}),
            success: function (response) {
                Swal.fire({
            title:'Thank you for your feedback',
            icon: 'success',
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
        }).then(()=>
    {
        location.reload()
    })
            },
            error: function () {
                alert("Error in returning the order. Please try again.");
            }
        });

    }
</script>


            </div>

            <!-- Right Section: Order Summary -->
            <div class="col-md-5 p-4 order-summary-section">
                
                <div>
                    <h3>Order Summary</h3>
                    <div class="order-summary">
                        <p><span>Total products:</span> <span><%=orderData.totalQuantity%></span></p>
                        <p><span>Subtotal:</span> <span>₹<%=orderData.totalPrice%></span></p>
                        <p><span>Total Discount:</span> <span style="color:green">-₹<%=orderData.discount%></span></p>
                        <p><span>Handling fee:</span> <span>₹<%=orderData.handlingFee%></span></p>
                        <p><span>Packaging Fee:</span> <span>₹<%=orderData.packagingFee%></span></p>
                        <p><span>Delievery Charge</span> <span style="color:green">Free</span></p>
                        <p><span style="color:blue">Inclusive of all taxes</span></p>
                        <hr>
                        <p class="total-amount"><span>Total Amount:</span> <span>₹<%=orderData.finalAmount%></span></p>
                    
                    </div>

                    <!-- Shipping Address -->
                    <h6>Shipping Address</h6>
                    <p class="small"><%=deliveryAddress.name%>,<%=deliveryAddress.city%>,<%=deliveryAddress.landMark%>,<%=deliveryAddress.state%>,<%=deliveryAddress.pincode%>,<%=deliveryAddress.phone%>,<%=deliveryAddress.altphone%></p>
                   
                    <!-- Payment Details -->
                    <h6>Payment Method</h6>
                    <p class="small"><%=orderData.paymentMethod%></p>
                </div>

                <!-- Download Invoice -->
                <a href="/orderInvoice?orderId=<%=orderData._id%>" class="btn invoice-btn w-100 mt-4" id="invoice-download">📄 Download Invoice</a>


            </div>

        </div>
    </div>

    <!-- JavaScript -->
    <script>

          let orderId='<%=orderData._id%>'
          console.log("orderId:"+orderId);
          
    </script>

    <style>

        /* Order Details Section */
        .order-details-section {
            background: #f4f4f4;
            display: flex;
            flex-direction: column;
            height: 100%;
        }

        /* Scrollable Content */
        .order-content {
            flex-grow: 1;
            overflow-y: auto;
            padding-right: 10px;
            max-height: 70vh; /* Limits height before scrolling */
        }

        /* Custom Scrollbar */
        .order-content::-webkit-scrollbar {
            width: 8px;
        }

        .order-content::-webkit-scrollbar-track {
            background: #ddd;
            border-radius: 5px;
        }

        .order-content::-webkit-scrollbar-thumb {
            background: #888;
            border-radius: 5px;
        }

        .order-content::-webkit-scrollbar-thumb:hover {
            background: #555;
        }

        /* Ordered Products */
        .ordered-items {
            margin-top: 10px;
        }

        .product-item {
            display: flex;
            align-items: center;
            padding: 10px;
            background: white;
            border-radius: 8px;
            box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);
            margin-bottom: 10px;
        }

        .product-image {
            width: 70px;
            height: 70px;
            border-radius: 6px;
            margin-right: 15px;
        }

        .product-title {
            font-weight: 600;
            margin-bottom: 5px;
        }

        /* Order Summary Section */
        .order-summary-section {
            background: white;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

        .order-summary p {
            display: flex;
            justify-content: space-between;
            padding: 6px 0;
            font-size: 14px;
        }

        .total-amount {
            font-size: 16px;
            font-weight: bold;
        }

        /* Buttons */
        /* .btn {
            padding: 10px;
            border-radius: 6px;
            font-size: 14px;
            transition: 0.3s ease-in-out;
        } */

        .cancel-btn {
            background-color: #d9534f;
            color: white;
        }


        .invoice-btn {
            background: #5cb85c;
            color: white;
        }

        .btn:hover {
            opacity: 0.8;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .order-details-section {
                height: auto;
                overflow: visible;
            }

            .order-content {
                max-height: none;
                overflow: visible;
            }

            .btn {
                width: 100%;
                margin-bottom: 8px;
            }
        }

        .order-status li {
            padding: 10px;
            border-left: 4px solid #ccc;
            margin-bottom: 6px;
            background: #fff;
            font-size: 14px;
            border-radius: 5px;
        }
        .order-status {
    list-style: none;
    padding: 0;
    display: flex;
    gap: 10px;
}

.status {
    padding: 5px 10px;
    border-radius: 5px;
    background: #ccc;
    color: black;
}

/* ✅ Highlighted statuses */
.status.active {
    background: #4CAF50;
    color: white;
}

    </style>

<%-include("../../views/partials/user/footer.ejs")%>