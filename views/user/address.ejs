<%- include("../../views/partials/user/header.ejs") %>
    <style>
        .address-management-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .address-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }
        
        .address-card {
            border: 1px solid #dee2e6;
            border-radius: 8px;
            padding: 20px;
            position: relative;
            transition: all 0.3s ease;
        }
        
        .address-card.default {
            border: 2px solid #0d6efd;
            background-color: #f8f9fa;
        }
        
        .default-badge {
            background-color: #0d6efd;
            color: white;
            padding: 3px 8px;
            border-radius: 4px;
            font-size: 0.8rem;
            margin-left: 10px;
        }
        
        .address-actions {
            margin-top: 15px;
            display: flex;
            gap: 10px;
        }
        
        .default-radio {
            position: absolute;
            top: 10px;
            right: 10px;
            cursor: pointer;
        }
        
        @media (max-width: 768px) {
            .address-container {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="address-management-container">
        <section id="address-management">
            <h2><i class="bi bi-house-door-fill"></i> Address Management</h2>
        
            <!-- Add New Address Button -->
            <button class="btn btn-info" data-bs-toggle="modal" data-bs-target="#addAddressModal">
                + Add New Address
            </button>
        
            <!-- Address List -->
            <div class="address-container">
                <% if(addressData!==null && addressData.address.length>0){ %>
                    <% addressData.address.forEach((ad) => { %>
                    <div class="address-card <%= ad.default ? 'default' : '' %>" data-address-id="<%= ad._id %>">
                        <input type="radio" name="defaultAddress" <% if (ad.default) { %> checked <% } %> class="default-radio">
                        <div class="address-details">
                            <h5> <%= ad.name %>
                                <% if (ad.default) { %>
                                <span class="default-badge">Default</span>
                                <% } %>
                            </h5>
                            <p style="color: grey;"><%= ad.addressType %></p>
                            <p><%= ad.city %>, <%= ad.landMark %>, <%= ad.state %></p>
                            <p>Pin: <%= ad.pincode %></p>
                            <p>Phone: <%= ad.phone %></p>
                            <p>Alt Phone: <%= ad.altPhone %></p>
                        </div>
                        <div class="address-actions">
                            <button class="btn btn-info" data-bs-toggle="modal" 
                                onclick="populateModel('<%=ad._id%>','<%=ad.addressType%>','<%=ad.name%>','<%=ad.city%>','<%=ad.landMark%>','<%=ad.state%>','<%=ad.pincode%>','<%=ad.phone%>','<%=ad.altPhone%>')" 
                                data-bs-target="#editModal">
                                Edit
                            </button>
                            <button class="btn btn-outline-danger btn-sm delete-btn" onclick="deleteAddress('<%=ad._id%>')">
                                Delete
                            </button>
                        </div>
                    </div>
                    <% }) %>
                <% } else { %>
                    <p>Please add an address</p>
                <% } %>
            </div>
        </section>

        <!-- Add New Address Modal -->
        <div class="modal fade" id="addAddressModal" tabindex="-1" aria-labelledby="addAddressModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addAddressModalLabel">Add New Address</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="addressForm">
                            <!-- Address Type -->
                            <div class="mb-3">
                                <label for="addressType" class="form-label">Address Type</label>
                                <select  id="addressType" required>
                                    <option value="Home">Home</option>
                                    <option value="Work">Work</option>
                                    <option value="Other">Other</option>
                                </select>
                            </div>

                            <!-- Name -->
                            <div class="mb-3">
                                <label for="name" class="form-label">Full Name</label>
                                <input type="text" class="form-control" id="name" required>
                            </div>

                            <!-- City & State -->
                            <div class="row">
                                <div class="col-md-6">
                                    <label for="city" class="form-label">City</label>
                                    <input type="text" class="form-control" id="city" required>
                                </div>
                                <div class="col-md-6">
                                    <label for="state" class="form-label">State</label>
                                    <input type="text" class="form-control" id="state" required>
                                </div>
                            </div>

                            <!-- Landmark -->
                            <div class="mb-3">
                                <label for="landmark" class="form-label">Landmark</label>
                                <input type="text" class="form-control" id="landmark">
                            </div>

                            <!-- Pincode & Phone -->
                            <div class="row">
                                <div class="col-md-6">
                                    <label for="pincode" class="form-label">Pincode</label>
                                    <input type="number" class="form-control" id="pincode" required>
                                </div>
                                <div class="col-md-6">
                                    <label for="phone" class="form-label">Phone Number</label>
                                    <input type="tel" class="form-control" id="phone" required>
                                </div>
                            </div>

                            <!-- Alternate Phone -->
                            <div class="mb-3">
                                <label for="altPhone" class="form-label">Alternate Phone</label>
                                <input type="tel" class="form-control" id="altPhone">
                            </div>

                            <!-- Set as Default Address -->
                            <div class="form-check mb-3">
                                <input class="form-check-input" type="checkbox" id="defaultAddress">
                                <label class="form-check-label" for="defaultAddress">
                                    Set as Default Address
                                </label>
                            </div>

                            <!-- Submit Button -->
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button type="submit" class="btn btn-primary">Save Address</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- Edit Address Modal -->
        <div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editAddressModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editAddressModalLabel">Edit Address</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="editaddressForm">
                            <!-- Hidden address ID -->
                            <input type="hidden" id="address-id">
                            
                            <!-- Address Type -->
                            <div class="mb-3">
                                <label for="editAddressType" class="form-label">Address Type</label>
                                <select id="editAddressType" required>
                                    <option value="Home">Home</option>
                                    <option value="Work">Work</option>
                                    <option value="Other">Other</option>
                                </select>
                            </div>

                            <!-- Name -->
                            <div class="mb-3">
                                <label for="editName" class="form-label">Full Name</label>
                                <input type="text" class="form-control" id="editName" required>
                            </div>

                            <!-- City & State -->
                            <div class="row">
                                <div class="col-md-6">
                                    <label for="editCity" class="form-label">City</label>
                                    <input type="text" class="form-control" id="editCity" required>
                                </div>
                                <div class="col-md-6">
                                    <label for="editState" class="form-label">State</label>
                                    <input type="text" class="form-control" id="editState" required>
                                </div>
                            </div>

                            <!-- Landmark -->
                            <div class="mb-3">
                                <label for="editLandmark" class="form-label">Landmark</label>
                                <input type="text" class="form-control" id="editLandmark">
                            </div>

                            <!-- Pincode & Phone -->
                            <div class="row">
                                <div class="col-md-6">
                                    <label for="editPincode" class="form-label">Pincode</label>
                                    <input type="number" class="form-control" id="editPincode" required>
                                </div>
                                <div class="col-md-6">
                                    <label for="editPhone" class="form-label">Phone Number</label>
                                    <input type="tel" class="form-control" id="editPhone" required>
                                </div>
                            </div>

                            <!-- Alternate Phone -->
                            <div class="mb-3">
                                <label for="editAltPhone" class="form-label">Alternate Phone</label>
                                <input type="tel" class="form-control" id="editAltPhone">
                            </div>
                        
                            <!-- Submit Button -->
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button type="submit" class="btn btn-primary">Update Address</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <!-- SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        $(document).ready(function () {
            // Default Address Selection
            $(".default-radio").on("change", function () {
                const selectedCard = $(this).closest(".address-card");
                const addressId = selectedCard.data("address-id");

                // Disable the radio button during the AJAX request
                $(this).prop("disabled", true);

                // Uncheck other radio buttons and remove 'default' class and badge from other address cards
                $(".default-radio").not(this).prop("checked", false);
                $(".address-card").not(selectedCard).removeClass("default").find(".default-badge").remove();

                // Add 'default' class and badge to the selected address card
                selectedCard.addClass("default");
                const h5 = selectedCard.find("h5");
                if (selectedCard.find(".default-badge").length === 0) {
                    const badge = $("<span>").addClass("default-badge").text("Default");
                    h5.append(badge);
                }

                // Send the update to the backend using AJAX
                updateDefaultAddress(addressId, selectedCard, $(this));
            });

            function updateDefaultAddress(addressId, selectedCard, radioButton) {
                $.ajax({
                    url: '/update-default-address',
                    method: 'POST',
                    data: { addressId: addressId },
                    success: function (response) {
                        if (!response.success) {
                            // Revert UI changes if the backend update fails
                            selectedCard.removeClass("default");
                            selectedCard.find(".default-badge").remove();
                            radioButton.prop("checked", false);
                            
                            Swal.fire({
                                title: 'Error',
                                text: 'Failed to update default address',
                                icon: 'error',
                                toast: true,
                                position: 'top-end',
                                showConfirmButton: false,
                                timer: 3000
                            });
                        }
                    },
                    error: function (error) {
                        console.error("Error while updating default address:", error);
                        // Revert UI changes if there's an error
                        selectedCard.removeClass("default");
                        selectedCard.find(".default-badge").remove();
                        radioButton.prop("checked", false);
                        
                        Swal.fire({
                            title: 'Error',
                            text: 'Failed to update default address',
                            icon: 'error',
                            toast: true,
                            position: 'top-end',
                            showConfirmButton: false,
                            timer: 3000
                        });
                    },
                    complete: function () {
                        // Re-enable the radio button after the request is complete
                        radioButton.prop("disabled", false);
                    }
                });
            }

            // Function to populate edit modal with all fields including addressType
            window.populateModel = function(id, addressType, name, city, landmark, state, pincode, phone, altPhone) {
                document.getElementById('address-id').value = id;
                document.getElementById('editAddressType').value = addressType;
                document.getElementById('editName').value = name;
                document.getElementById('editCity').value = city;
                document.getElementById('editLandmark').value = landmark;
                document.getElementById('editState').value = state;
                document.getElementById('editPincode').value = pincode;
                document.getElementById('editPhone').value = phone;
                document.getElementById('editAltPhone').value = altPhone;
            };

            // Add Address Form Submission
            document.getElementById("addressForm").addEventListener("submit", function (e) {
                e.preventDefault();

                // Collect form data
                const addressType = document.getElementById("addressType").value;
                const name = document.getElementById("name").value.trim();
                const city = document.getElementById("city").value.trim();
                const landMark = document.getElementById("landmark").value.trim();
                const state = document.getElementById("state").value.trim();
                const pincode = document.getElementById("pincode").value.trim();
                const phone = document.getElementById("phone").value.trim();
                const altPhone = document.getElementById("altPhone").value.trim();
                const isDefault = document.getElementById("defaultAddress").checked;

                // Validation
                if (!name || !city || !landMark || !state || !pincode || !phone) {
                    Swal.fire("Error", "All fields are required!", "error");
                    return;
                }

                if (!/^\d{6}$/.test(pincode)) {
                    Swal.fire("Error", "Invalid Pincode! Must be 6 digits.", "error");
                    return;
                }

                if (!/^\d{10}$/.test(phone)) {
                    Swal.fire("Error", "Invalid Phone Number! Must be 10 digits.", "error");
                    return;
                }

                if (altPhone && !/^\d{10}$/.test(altPhone)) {
                    Swal.fire("Error", "Invalid Alternate Phone Number!", "error");
                    return;
                }

                // If validation passes, store data
                const addressData = {
                    addressType,
                    name,
                    city,
                    landMark,
                    state,
                    pincode,
                    phone,
                    altPhone,
                    default: isDefault
                };

                $.ajax({
                    url: "/add-address",
                    type: "POST",
                    data: {addressData},
                    success: function (response) {
                        Swal.fire({
                            title: 'Address added successfully',
                            icon: 'success',
                            toast: true,
                            position: 'top-end',
                            showConfirmButton: false,
                            timer: 3000
                        }).then(() => {
                            $("#addAddressModal").modal("hide");
                            location.reload();
                        });
                    },
                    error: function (xhr) {
                        Swal.fire({
                            title: 'Error adding address',
                            text: xhr.responseJSON ? xhr.responseJSON.message : 'Something went wrong!',
                            icon: 'error',
                            toast: true,
                            position: 'top-end',
                            showConfirmButton: false,
                            timer: 3000
                        });
                    }
                });
            });
         
            // Update Address Form Submission
            document.getElementById("editaddressForm").addEventListener("submit", function (e) {
                e.preventDefault();

                // Collect form data
                const addressId = document.getElementById("address-id").value;
                const addressType = document.getElementById("editAddressType").value;
                const name = document.getElementById("editName").value.trim();
                const city = document.getElementById("editCity").value.trim();
                const landMark = document.getElementById("editLandmark").value.trim();
                const state = document.getElementById("editState").value.trim();
                const pincode = document.getElementById("editPincode").value.trim();
                const phone = document.getElementById("editPhone").value.trim();
                const altPhone = document.getElementById("editAltPhone").value.trim();

                // Validation
                if (!name || !city || !landMark || !state || !pincode || !phone || !altPhone) {
                    Swal.fire("Error", "All fields are required!", "error");
                    return;
                }

                if (!/^\d{6}$/.test(pincode)) {
                    Swal.fire("Error", "Invalid Pincode! Must be 6 digits.", "error");
                    return;
                }

                if (!/^\d{10}$/.test(phone)) {
                    Swal.fire("Error", "Invalid Phone Number! Must be 10 digits.", "error");
                    return;
                }

                if (altPhone && !/^\d{10}$/.test(altPhone)) {
                    Swal.fire("Error", "Invalid Alternate Phone Number!", "error");
                    return;
                }
                
                if (phone === altPhone) {
                    Swal.fire("Error", "Phone number and alternate phone number should not be same!", "error");
                    return;
                }

                // If validation passes, store data
                const addressData = {
                    addressId,
                    addressType,
                    name,
                    city,
                    landMark,
                    state,
                    pincode,
                    phone,
                    altPhone,
                };

                $.ajax({
                    url: "/edit-address",
                    type: "POST",
                    data: {addressData},
                    success: function (response) {
                        Swal.fire({
                            title: 'Address updated successfully',
                            icon: 'success',
                            toast: true,
                            position: 'top-end',
                            showConfirmButton: false,
                            timer: 3000
                        }).then(() => {
                            $("#editModal").modal("hide");
                            location.reload();
                        });
                    },
                    error: function (xhr) {
                        Swal.fire({
                            title: 'Error updating address',
                            text: xhr.responseJSON ? xhr.responseJSON.message : 'Something went wrong!',
                            icon: 'error',
                            toast: true,
                            position: 'top-end',
                            showConfirmButton: false,
                            timer: 3000
                        });
                    }
                });
            });
        });
     
        // Delete Address Function
        function deleteAddress(addressId) {
            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: "btn btn-success",
                    cancelButton: "btn btn-danger"
                },
                buttonsStyling: false
            });
            
            swalWithBootstrapButtons.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Yes, delete it!",
                cancelButtonText: "No, cancel!",
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "/delete-address",
                        type: "POST",
                        data: {addressId},
                        success: function (response) {
                            swalWithBootstrapButtons.fire({
                                title: "Deleted!",
                                text: "Your address has been deleted.",
                                icon: "success"
                            }).then(() => {
                                location.reload();
                            });
                        },
                        error: function(xhr) {
                            Swal.fire({
                                title: 'Error deleting address',
                                text: xhr.responseJSON ? xhr.responseJSON.message : 'Something went wrong!',
                                icon: 'error',
                                toast: true,
                                position: 'top-end',
                                showConfirmButton: false,
                                timer: 3000
                            });
                        }
                    });
                } else if (result.dismiss === Swal.DismissReason.cancel) {
                    swalWithBootstrapButtons.fire({
                        title: "Cancelled",
                        text: "Your address is safe :)",
                        icon: "error"
                    });
                }
            });
        }
    </script>
    <%- include("../../views/partials/user/footer.ejs") %>