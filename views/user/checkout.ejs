<%- include("../../views/partials/user/header.ejs") %>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<!-- Breadcrumb Section Begin -->
<section class="breadcrumb-option">
  <div class="container">
    <div class="row">
      <div class="col-lg-12">
        <div class="breadcrumb__text py-2">
          <h4>Check Out</h4>
          <div class="breadcrumb__links">
            <a href="/">Home</a>
            <a href="/shop">Shop</a>
            <span>Check Out</span>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
<!-- Breadcrumb Section End -->

<!-- Checkout Section Begin -->
<section class="checkout spad">
  <div class="container">
    <div class="row">
      <!-- Left Column: Accordion -->
      <div class="col-lg-8 col-md-6">
        <div class="accordion" id="checkoutAccordion">
          <!-- Section 1: Delivery Address -->
          <div class="accordion-item mb-3" id="section-address" style="min-height: 120px; width: 100%;">
            <h2 class="accordion-header" id="headingAddress">
              <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseAddress" aria-expanded="true" aria-controls="collapseAddress">
                1. Choose Delivery Address
                <span class="completed-badge d-none" id="address-completed">Completed</span>
              </button>
            </h2>
            <div id="collapseAddress" class="accordion-collapse collapse show" aria-labelledby="headingAddress" data-bs-parent="#checkoutAccordion">
              <div class="accordion-body">
                <!-- Address List -->
                <div class="address-container">
                  <% addressData.forEach((ad) => { %>
                    <div class="address-card <%= ad.default ? 'default' : '' %>" data-address-id="<%= ad._id %>">
                      <input type="radio" name="addressId" value="<%= ad._id %>" <% if (ad.default) { %> checked <% } %> class="default-radio">
                      <div class="address-details">
                        <h5>
                          <%= ad.name %>
                          <% if (ad.default) { %>
                            <span class="default-badge">Default</span>
                          <% } %>
                        </h5>
                        <p style="color: grey;"><%= ad.addressType %></p>
                        <p><%= ad.city %>, <%= ad.landMark %>, <%= ad.state %></p>
                        <p>Pin: <%= ad.pincode %></p>
                        <p>Phone: <%= ad.phone %></p>
                        <p>Alt Phone: <%= ad.altPhone %></p>
                      </div>
                    </div>
                  <% }); %>
                </div>
                <br>
                <!-- Add New Address Button -->
                <div class="checkout__input add-address">
                  <button type="button" class="btn btn-primary" onclick="showAddAddressForm()">
                    <span class="icon_plus"></span> Add New Address
                  </button>
                </div>
                <!-- Hidden Add Address Form -->
                <div id="addAddressForm" style="display:none; margin-top:20px;">
                  <h6 class="checkout__title">Add New Address</h6>
                  <div class="row">
                    <div class="col-lg-6">
                      <div class="checkout__input">
                        <p>Name<span>*</span></p>
                        <input type="text" id="name" name="name" placeholder="Your name">
                      </div>
                    </div>
                    <div class="col-lg-6">
                      <div class="checkout__input">
                        <p>LandMark</p>
                        <input type="text" id="landmark" placeholder="Shopping complex, park, etc.">
                      </div>
                    </div>
                  </div>
                  <div class="checkout__input">
                    <p>City<span>*</span></p>
                    <input type="text" id="city">
                  </div>
                  <div class="checkout__input">
                    <p>State<span>*</span></p>
                    <input type="text" id="state">
                  </div>
                  <div class="checkout__input">
                    <p>Postcode/ZIP<span>*</span></p>
                    <input type="text" id="pincode">
                  </div>
                  <div class="checkout__input">
                    <p>Phone<span>*</span></p>
                    <input type="text" id="phone">
                  </div>
                  <div class="checkout__input">
                    <p>Alternative Phone<span>*</span></p>
                    <input type="text" id="altPhone">
                  </div>
                  <div class="checkout__input">
                    <button type="button" class="btn btn-success" onclick="saveAddress()">Save Address</button>
                    <button type="button" class="btn btn-secondary" onclick="hideAddAddressForm()">Cancel</button>
                  </div>
                </div>
                <!-- Mark as Complete Button for Delivery Address -->
                <button type="button" class="btn btn-success mt-3" onclick="markComplete('section-address', 'address-completed')">Confirm & Save</button>
              </div>
            </div>
          </div>
          <!-- Section 2: Payment Method -->
          <div class="accordion-item mb-3" id="section-payment" style="min-height: 120px; width: 100%;">
            <h2 class="accordion-header" id="headingPayment">
              <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapsePayment" aria-expanded="false" aria-controls="collapsePayment">
                2. Payment Method
                <span class="completed-badge d-none" id="payment-completed">Completed</span>
              </button>
            </h2>
            <div id="collapsePayment" class="accordion-collapse collapse" aria-labelledby="headingPayment" data-bs-parent="#checkoutAccordion">
              <div class="accordion-body">
                <p>Select your payment method:</p>
                <div class="form-check">
                  <input class="form-check-input" type="radio" name="paymentOption" id="pay1" value="online payment">
                  <label class="form-check-label" for="pay1">Online Payment</label>
                </div>
                <div class="form-check">
                  <%if(grandTotal>50000){%>
                  <input class="form-check-input" type="radio" name="paymentOption" id="pay2" value="Cash on Delivery" disabled>
                  <%}else{%>
                    <input class="form-check-input" type="radio" name="paymentOption" id="pay2" value="Cash on Delivery">
                    <%}%>
                  <label class="form-check-label" for="pay2">Cash on Delivery</label>
                </div>
                <div class="form-check">
                  <%if(wallet){%>
                  <%if( grandTotal>wallet.balance ){%>
                    <input class="form-check-input" type="radio" name="paymentOption" id="pay3" value="wallet" disabled>
                    <label class="form-check-label" for="pay1">Wallet <span style="color: red;">(â‚¹<%=wallet.balance?wallet.balance:0%>)</span></label>
                      
                    <%}else{%>
                      <input class="form-check-input" type="radio" name="paymentOption" id="pay3" value="wallet">
                      <label class="form-check-label" for="pay1">Wallet</label>
                      <%}%>
                      <%}%>
                        
                </div>
                <!-- Mark as Complete Button for Payment -->
                <button type="button" class="btn btn-success mt-3" onclick="markComplete('section-payment', 'payment-completed')">confirm payment option</button>
              </div>
            </div>
          </div>
          <!-- Section 3: Order Summary -->
          <div class="accordion-item mb-3" id="section-summary" style="min-height: 120px; width: 100%;">
            <h2 class="accordion-header" id="headingSummary">
              <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseSummary" aria-expanded="false" aria-controls="collapseSummary">
                3. Order Summary
                <span class="completed-badge d-none" id="summary-completed">Completed</span>
              </button>
            </h2>
            <div id="collapseSummary" class="accordion-collapse collapse" aria-labelledby="headingSummary" data-bs-parent="#checkoutAccordion">
              <div class="accordion-body">
                <p>Review your order details:</p>
                <div class="shopping__cart__table">
                  <table>
                    <thead>
                      <tr>
                        <th>Product</th>
                        <th>Quantity</th>
                        <th>Total</th>
                      </tr>
                    </thead>
                    <tbody>
                      <% if (products.length > 0) { %>
                        <% products.forEach(pr => { %>
                          <tr data-item-id="<%= pr._id %>">
                            <td class="product__cart__item">
                              <div class="product__cart__item__pic">
                                  <a href="/productDetails?id=<%=pr.productDetails._id%>" class="btn">
                                <img src="<%= pr.productDetails.productImage[0] %>" alt="Product Image">
                                </a>
                              </div>
                              <div class="product__cart__item__text">
                                <h6><%= pr.productDetails.productName %></h6>
        
                                <h6 style="color:green">
                                  <s style="font-size: 13px; color: grey;">â‚¹<%= pr.productDetails.regularPrice %></s>
                                  â‚¹<%= pr.productDetails.salePrice %>.0
                                </h6>
                              </div>
                            </td>
                            <td class="quantity__item">
                              <div class="quantity">
                                 
                                <p>x<%=pr.quantity%></p>
                          
                                </div>
                            </td>
                            <td class="cart__price">
                              <span id="item-total-<%= pr.productDetails._id %>">â‚¹<%= pr.productDetails.salePrice * pr.quantity %></span>
                            </td>
                          </tr>
                        <% }) %>
                      <% } else { %>
                        <tr>
                          <td colspan="4" class="text-center">
                            <p class="lead mb-4">No items</p>
                          </td>
                        </tr>
                      <% } %>
                    </tbody>
                  </table>
                </div>
             
                <!-- Mark as Complete Button for Order Summary -->
                <a type="button" class="btn btn-success mt-3" style="color:white" onclick="markComplete('section-summary', 'summary-completed')">Confirm Order</a>
              </div>
            </div>
          </div>
        </div>
  <br><br>
        <div class="accordion accordion-flush" id="accordionFlushExample">
          <div class="accordion-item">
            <h2 class="accordion-header" id="flush-headingOne">
              <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseOne" aria-expanded="false" aria-controls="flush-collapseOne">
                What payment methods do you accept?
              </button>
            </h2>
            <div id="flush-collapseOne" class="accordion-collapse collapse" aria-labelledby="flush-headingOne" data-bs-parent="#accordionFlushExample">
              <div class="accordion-body"> We accept credit/debit cards, net banking, UPI, and cash on delivery (COD) for eligible orders..</div>
            </div>
          </div>
          <div class="accordion-item">
            <h2 class="accordion-header" id="flush-headingTwo">
              <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseTwo" aria-expanded="false" aria-controls="flush-collapseTwo">
                Is cash on delivery available for all orders?
              </button>
            </h2>
            <div id="flush-collapseTwo" class="accordion-collapse collapse" aria-labelledby="flush-headingTwo" data-bs-parent="#accordionFlushExample">
              <div class="accordion-body"> Cash on delivery is available for most orders, but it is not available for purchases exceeding â‚¹50,000. For such orders, prepayment is required..</div>
            </div>
          </div>
          <div class="accordion-item">
            <h2 class="accordion-header" id="flush-headingThree">
              <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseThree" aria-expanded="false" aria-controls="flush-collapseThree">
                Why is cash on delivery not allowed for orders over â‚¹50,000?
              </button>
            </h2>
            <div id="flush-collapseThree" class="accordion-collapse collapse" aria-labelledby="flush-headingThree" data-bs-parent="#accordionFlushExample">
              <div class="accordion-body"> To minimize risks associated with high-value transactions, we require prepayment for orders over â‚¹50,000. You can use any of our online payment options to complete your purchase..</div>
            </div>
          </div>
        </div>
      </div>
      
      <div class="col-lg-4 col-md-6">
        <div class="checkout__coupon mb-4">
            <h6 class="coupon__code">
              <span class="icon_tag_alt"></span> Have a coupon?
            </h6>
            <div class="row">
              <div class="col-md-6">
                <input type="text" id="coupon-code-input" name="coupon" class="form-control" placeholder="Enter coupon code">
              </div>
              <div class="col-md-6">
                <div class="dropdown">
                    <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                      Available Coupon
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                      <% let flag=0%>
                        <%couponData.forEach((cou)=>{%>
                            <%if(cou.minimumPrice<=grandTotal){%>
                              <%flag++%>
                        <li><a class="dropdown-item" href="#" onclick="selectCoupon('<%=cou.code%>'); return false;"><%=cou.code%>(â‚¹<%=cou.offerPrice%> OFF)</a></li>
                        <%}%>
                        <%})%>
                        <%if(flag===0){%>
                          <li>No coupons</li>
                          <%}%>
                    </ul>
                  </div>
              </div>
            </div>
            <br>
            <button type="button" class="btn btn-success w-100" onclick="applyCoupon()">Apply Coupon</button>
            <div id="coupon-message" style="margin-top:10px;"></div>
          </div>
        
        <!-- Order Summary -->

<div class="checkout__order">
<h4 class="order__title">Your order</h4>
<div class="checkout__order__products">Product <span>Total</span></div>
<ul class="checkout__total__all" id="order-totals">
    <li>Total items <span id="total-quantity" style="color:blue"><%= totalQuantity %></span></li>
    <li>Grand Total <span id="grand-regularTotal" >â‚¹ <%= grandRegularTotal %></span></li>
    <li>Total Discount <span style="color: rgb(5, 111, 6);" id="discount-amount">-â‚¹<%= grandRegularTotal - grandTotal %></span></li>
    <li style="color:green;">Coupon extra discount <span id="coupon-added" style="color:rgb(255, 42, 9)">not added</span></li>
    <li>Handling Fee <span id="handling-fee" style="color:rgb(0, 0, 0)">â‚¹ <%= handlingFee %></span></li>
    <li>Packaging Fee <span id="packaging-fee" style="color:rgba(0, 0, 0, 0.778)">â‚¹<%= packagingFee %></span></li>
    <li>Delivery <span id="delivery-info" style="color: green;">Free</span></li>
    <li style="color:blue">Inclusive of all Taxes</li>
    <hr style=" border: 1px solid #757272; margin: 0 auto;">

    <li>Total Payable <span style="color: black;font-size: large;" id="grand-total">â‚¹ <%= grandTotal  %></span></li>
</ul>
<button onclick="placeOrder()" id="placeOrder" class="site-btn">PLACE ORDER</button>

<script>


function openRazorpayModal(order,data) {
  Swal.fire({
        title: 'Razor pay called',
        text: '',
        icon: 'warning',
        toast: true,
        position: 'top-end',
        timer: 3000,
        showConfirmButton: false
      });
  const options = {
    key: order.user_key, // Replace with your Razorpay key_id
    amount: order.amount,
    currency:'INR',
    order_id: order.id, // Use the order ID from the server
    name: 'ZooCart',
    description: 'Order Payment',
    handler: function (response) {
      // Handle successful payment
      verifyPayment(response);
    },
    prefill: {
      name: data.name,
      email: data.email,
      contact: data.phone,
    },
    theme: {
      color: '#091db1',
    },
  };

  const rzp = new Razorpay(options);
  rzp.open();
}


  function placeOrder() {
    // Define the required accordion section IDs
    const requiredSections = ['section-address', 'section-payment', 'section-summary'];
    let allCompleted = true;
    
    // Check each section for the 'completed' class
    requiredSections.forEach(function(id) {
      const section = document.getElementById(id);
      if (!section || !section.classList.contains('completed')) {
        allCompleted = false;
      }
    });
    
    // If not all sections are complete, show a warning
    if (!allCompleted) {
      Swal.fire({
        title: 'Incomplete Steps',
        text: 'Please complete all sections before placing your order.',
        icon: 'warning',
        toast: true,
        position: 'top-end',
        showConfirmButton: false,
        timer: 3000
      });
      return;
    }

    // 1. Get the selected address id from the radio inputs.
    var addressId = $('input[name="addressId"]:checked').val();
    if (!addressId) {
      Swal.fire({
        title: 'No address selected',
        text: 'Please select a delivery address.',
        icon: 'warning',
        toast: true,
        position: 'top-end',
        timer: 3000,
        showConfirmButton: false
      });
      return;
    }
    
    // 2. Get the selected payment method.
    var paymentMethod = $('input[name="paymentOption"]:checked').val();
    if (!paymentMethod) {
      Swal.fire({
        title: 'No payment method selected',
        text: 'Please select a payment method.',
        icon: 'warning',
        toast: true,
        position: 'top-end',
        timer: 3000,
        showConfirmButton: false
      });
      return;
    }
    
  
    var totalQuantity = $('#total-quantity').text().trim();  
    var grandRegularTotal = $('#grand-regularTotal').text().replace(/[^\d.]/g, '').trim();
    var discountAmount = $('#discount-amount').text().replace(/[^\d.]/g, '').trim();
    var couponAddedText = $('#coupon-added').text().trim(); 
     var couponValue = parseFloat(couponAddedText.replace(/[^\d.]/g, ''));

    var handlingFee = $('#handling-fee').text().replace(/[^\d.]/g, '').trim();
    var packagingFee = $('#packaging-fee').text().replace(/[^\d.]/g, '').trim();
    var grandTotal = $('#grand-total').text().replace(/[^\d.]/g, '').trim();

    // 4. Build an order data object.
    var orderData = {
      addressId: addressId,
      paymentMethod: paymentMethod,
      totalQuantity: parseInt(totalQuantity),
      grandRegularTotal: parseFloat(grandRegularTotal),
      discountAmount: parseFloat(discountAmount),
      coupon:couponValue?couponValue:null,
      handlingFee: parseFloat(handlingFee),
      packagingFee: parseFloat(packagingFee),
      grandTotal: parseFloat(grandTotal)
    };

    console.log("Order Data: ", orderData);
    
    // 5. Use AJAX to send orderData to your REST API endpoint.
    $.ajax({
  url: '/api/orders/placeOrder?cart=1',
  type: 'POST',
  data: JSON.stringify(orderData),
  contentType: 'application/json',
  success: function (response) {
    if (response.payment_method === 'online') {
      const options = {
        key: response.order.user_key, // Use the key from the response
        amount: response.order.amount,
        currency: response.order.currency,
        order_id: response.order.id,
        name: 'ZooCart',
        description: 'Order Payment',
        handler: function (res) {
          console.log('Payment ID:', response.razorpay_payment_id);

          // Send payment details to the server for verification
          verifyPayment(res,response.savedOrder._id);
        },
        modal: {
          ondismiss: function () {
            // Redirect to the failure page
            window.location.href = '/order-unsuccess';
          },
        },
        prefill: {
          name: response.savedOrder.name,
          email: response.savedOrder.email,
          contact:response.savedOrder.phone,
        },
      };

      const rzp = new Razorpay(options);
      rzp.open();
    } else {
      // For non-online payments (e.g., COD), redirect to the success page
      window.location.href = '/order-placed';
    }
  },
  error: function (err) {
    console.error('Error placing order:', err);
    Swal.fire({
      title: 'Error',
      text: 'There was an error placing your order. Please try again.',
      icon: 'error',
      toast: true,
      position: 'top-end',
      timer: 3000,
      showConfirmButton: false,
    });
  },
});
  }

// Function to verify payment
function verifyPayment(response,orderId) {
  $.ajax({
    url: '/api/orders/verifyPayment',
    type: 'POST',
    contentType: 'application/json',
    data: JSON.stringify({
      orderId:orderId,
      razorpay_payment_id: response.razorpay_payment_id,
      razorpay_order_id: response.razorpay_order_id,
      razorpay_signature: response.razorpay_signature,
    }),
    success: function (verificationResult) {
      if (verificationResult.success) {
        // Payment verified successfully
        window.location.href = '/order-placed'; // Redirect to success page
      } else {
        // Payment verification failed
        window.location.href = '/order-unsuccess'; // Redirect to failure page
      }
    },
    error: function (xhr, status, error) {
      console.error('Error verifying payment:', error);
      window.location.href = '/order-unsuccess'; // Redirect to failure page
    },
  });
}

 

</script>

</div>
      </div>
    </div>
  </form>
</div>
</div>
</section>
<!-- Checkout Section End -->

<%- include("../../views/partials/user/footer.ejs") %>

<style>
  /* Adjust radio buttons (make them smaller) */
  input[type="radio"] {
    width: 15px;
    height: 15px;
    margin-right: 5px;
    vertical-align: middle;
  }
  /* Address Card */
  .address-container {
    margin-top: 15px;
    display: flex;
    flex-direction: column;
    gap: 15px;
  }
  .address-card {
    background: #fff;
    border-radius: 8px;
    padding: 15px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    display: flex;
    align-items: center;
    gap: 15px;
    transition: transform 0.2s ease-in-out;
  }
  .address-card:hover {
    transform: scale(1.02);
  }
  .default-badge {
    background: #007bff;
    color: #fff;
    font-size: 12px;
    padding: 3px 8px;
    border-radius: 5px;
    margin-left: 8px;
  }
  .address-details h5 {
    margin: 0;
    font-size: 1.1rem;
    font-weight: 600;
  }
  .address-details p {
    margin: 3px 0;
    font-size: 0.9rem;
    color: #555;
  }
  .completed-badge {
      font-size: 0.9em;
      color: #155724;
      background-color: #c3e6cb;
      padding: 2px 6px;
      border-radius: 4px;
      margin-left: 10px;
    }
    .product__cart__item__pic {
    width: 120px; /* Set the container width */
    height: 120px; /* Set the container height */
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden; /* Prevent overflow */
    border-radius: 8px; /* Optional: rounded corners */
}

.product-image {
    width: 100%; /* Make the image responsive */
    height: 100%;
    object-fit: cover; /* Ensures image covers the container while maintaining aspect ratio */
    border-radius: 8px; /* Match container border-radius */
}
.shopping__cart__table table tbody tr td.quantity__item {
  width: 175px;
}

.shopping__cart__table table tbody tr td.quantity__item .quantity {
  width: 80px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.shopping__cart__table table tbody tr td.quantity__item .quantity input {
  width: 50px;
  border: none;
  text-align: center;
  color: #111111;
  font-size: 16px;
  background: transparent;
}

.shopping__cart__table table tbody tr td.quantity__item .quantity .qtybtn {
  font-size: 16px;
  color: #888888;
  width: 30px;
  height: 30px;
  line-height: 25px;
  text-align: center;
  cursor: pointer;
  background: #f0f0f0;
  border: 1px solid #ddd;
  border-radius: 4px;
  margin: 0 5px;
}

.shopping__cart__table table tbody tr td.quantity__item .quantity .qtybtn:hover {
  background: #e0e0e0;
  color: #555;
}
.swal2-toast {
    font-size: 12px !important;  /* Adjust the font size here */
    font-family: 'Arial', sans-serif; 
}
input[type="radio"] {
    width: 15px;
    height: 15px;
    margin-right: 5px;
    vertical-align: middle;
  }
  /* Address Card Styling */
  .address-container {
    margin-top: 15px;
    display: flex;
    flex-direction: column;
    gap: 15px;
  }
  .address-card {
    background: #fff;
    border-radius: 8px;
    padding: 15px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    display: flex;
    align-items: center;
    gap: 15px;
    transition: transform 0.2s ease-in-out;
  }
  .address-card:hover {
    transform: scale(1.02);
  }
  .default-badge {
    background: #007bff;
    color: #fff;
    font-size: 12px;
    padding: 3px 8px;
    border-radius: 5px;
    margin-left: 8px;
  }
  .address-details h5 {
    margin: 0;
    font-size: 1.1rem;
    font-weight: 600;
  }
  .address-details p {
    margin: 3px 0;
    font-size: 0.9rem;
    color: #555;
  }
  /* Coupon container adjustments */
  .coupon-container {
    position: absolute;
    top: 20px;
    right: 20px;
    text-align: right;
  }
  .coupon-container input {
    width: 150px;
    border-radius: 4px;
    padding: 4px 6px;
    border: 1px solid #ddd;
  }
  .coupon-container button {
    margin-top: 5px;
  }
  /* Order summary container */
  .order-summary {
    padding-top: 30px;
  }
  hr {
    margin: 10px auto;
  }
</style>

<script>
  // Toggle display of add address form
  function showAddAddressForm() {
    document.getElementById('addAddressForm').style.display = 'block';
  }
  function hideAddAddressForm() {
    document.getElementById('addAddressForm').style.display = 'none';
  }
  
  // Function to mark an accordion section as complete
  function markComplete(sectionId, badgeId) {
    var section = document.getElementById(sectionId);
    var badge = document.getElementById(badgeId);
    
    // Check if a radio option is selected in this section (if applicable)
    var radios = section.querySelectorAll("input[type='radio']");
    var isChecked = Array.from(radios).some(radio => radio.checked);
    if (radios.length > 0 && !isChecked) {
      Swal.fire({
            title:'choose one option to proceed',
            icon: 'warning',
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
        });
      return;
    }
    
    // Mark section as completed visually
    section.classList.add("completed");
    badge.classList.remove("d-none");
    
    // Collapse current section using Bootstrap's collapse API
    var collapseElem = section.querySelector('.accordion-collapse');
    var bsCollapse = new bootstrap.Collapse(collapseElem, { toggle: false });
    bsCollapse.hide();
    
    // Automatically open the next section, if available
    var nextItem = section.nextElementSibling;
    if (nextItem && nextItem.classList.contains("accordion-item")) {
      var nextCollapse = nextItem.querySelector('.accordion-collapse');
      var bsNextCollapse = new bootstrap.Collapse(nextCollapse, { toggle: false });
      bsNextCollapse.show();
    }
  }
  
  function selectCoupon(code) {
    document.getElementById('coupon-code-input').value = code;
  }
  
  function applyCoupon() {

    var couponCode = document.getElementById('coupon-code-input').value.trim();
    if (!couponCode) {
      document.getElementById('coupon-message').innerHTML = "<span class='text-danger'>Please enter a coupon code.</span>";
      return;
    }

    $.ajax({
      url:'/api/coupons/apply',
      type: 'POST',
      contentType: 'application/json',
      data: JSON.stringify({ couponCode: couponCode, cart: true }),  // You may include more data if needed.
      success: function(response) {
        if (response.success) {
          // Update the order summary fields with new totals and coupon details.
          // Adjust property names as per your backend response.
          $('#grand-total').text('â‚¹' + response.grandTotal)
          $('#coupon-added').text('-â‚¹' + response.couponOfferPrice + ' OFF').css('color', 'green');

          $('#coupon-message').html("<span class='text-success'>Coupon '" + couponCode + "' applied successfully!</span>");
        } else {
          $('#coupon-message').html("<span class='text-danger'>" + response.message + "</span>");
        }
      },
      error: function(err) {
        console.error("Error applying coupon:", err);
        $('#coupon-message').html("<span class='text-danger'>Error applying coupon. Please try again later.</span>");
      }
    });
    // Simulate coupon application. In real use, you would call an API.
  }





  function saveAddress() {
  // Collect field values from the form
  const name = $('#name').val().trim();
  const landmark = $('#landmark').val().trim();
  const city = $('#city').val().trim();
  const state = $('#state').val().trim();
  const pincode = $('#pincode').val().trim();
  const phone = $('#phone').val().trim();
  const altPhone = $('#altPhone').val().trim();
  
  // Regular expression for a 6-digit pincode
  const pincodeRegex = /^\d{6}$/;
  // Regular expression for a valid phone number (example: 10 digits, modify as needed)
  const phoneRegex = /^\d{10}$/;
  
  // Validate required fields
  if (!name || !city || !state || !pincode || !phone) {
    Swal.fire({
      icon: 'error',
      title: 'Validation Error',
      text: 'Please fill in all the required fields.'
    });
    return;
  }
  
  // Validate pincode (should be 6 digits)
  if (!pincodeRegex.test(pincode)) {
    Swal.fire({
      icon: 'error',
      title: 'Invalid Pincode',
      text: 'Please enter a valid 6-digit pincode.'
    });
    return;
  }
  
  // Validate phone numbers (modify phoneRegex if your requirements differ)
  if (!phoneRegex.test(phone)) {
    Swal.fire({
      icon: 'error',
      title: 'Invalid Phone Number',
      text: 'Please enter a valid 10-digit phone number.'
    });
    return;
  }
  
  // Optionally, you can validate altPhone if provided
  if (altPhone && !phoneRegex.test(altPhone)) {
    Swal.fire({
      icon: 'error',
      title: 'Invalid Alternate Phone Number',
      text: 'Please enter a valid 10-digit alternate phone number.'
    });
    return;
  }
  
  // Build the data object
  const addressData = {
    addressType:"Home",
    name: name,
    landMark: landmark,  // using schema field "landMark"
    city: city,
    state: state,
    pincode: pincode,
    phone: phone,
    altPhone: altPhone,
    default:false,

    };

  // Send the data via AJAX POST
  $.ajax({
    url: '/api/addresses',
    type: 'POST',
    data:{addressData:addressData},
    success: function(response) {
      if (response.success) {
        Swal.fire({
          icon: 'success',
          title: 'Address Saved',
          text: 'Your address has been saved successfully!'
        }).then(() => {
          hideAddAddressForm();
          location.reload();
        });
      } else {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: response.message || 'Error saving address'
        });
      }
    },
    error: function(err) {
      console.error("Error saving address:", err);
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'An error occurred while saving your address. Please try again later.'
      });
    }
  });
}


</script>
