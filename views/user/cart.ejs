 
 <%-include("../../views/partials/user/header.ejs")%><!-- Breadcrumb Section Begin -->
 <section class="breadcrumb-option">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb__text">
                    <h4>Shopping Cart</h4>
                    <div class="breadcrumb__links">
                        <a href="/">Home</a>
                        <a href="/shop">Shop</a>
                        <span>Shopping Cart</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Breadcrumb Section End -->
  <script>
const products = <%-JSON.stringify(products) %>

  </script>

<!-- Shopping Cart Section Begin -->
<section class="shopping-cart spad">
    <div class="container">
      <div class="row">
        <!-- Cart Items Table -->
        <div class="col-lg-8">
          <div class="shopping__cart__table">
            <table>
              <thead>
                <tr>
                  <th>Product</th>
                  <th>Quantity</th>
                  <th>Total</th>
                  <th></th>
                </tr>
              </thead>
              <tbody>
                <% if (products.length > 0) { %>
                  <% products.forEach(pr => { %>
                    <tr data-item-id="<%= pr._id %>">
                      <td class="product__cart__item">
                        <div class="product__cart__item__pic">
                            <a href="/productDetails?id=<%=pr.productDetails._id%>" class="btn">
                          <img src="<%= pr.productDetails.productImage[0] %>" alt="Product Image">
                          </a>
                        </div>
                        <div class="product__cart__item__text">
                          <h6><%= pr.productDetails.productName %></h6>
                          <% if (pr.productDetails.status === "Available") { %>
                          <h6 style="color:green">
                            <s style="font-size: 13px; color: grey;">₹<%= pr.productDetails.regularPrice %></s>
                            ₹<%= pr.productDetails.salePrice %>.0
                          </h6>
                          <% if (pr.productDetails.status === "Available") { %>
                            <h6 style="color: rgb(7, 182, 45);"><%= pr.productDetails.status %></h6>
                          <% } else { %>
                            <h6 style="color: rgb(218, 22, 8);"><%= pr.productDetails.status %></h6>
                          <% } %>
                          <% if (pr.productDetails.quantity < 100 && pr.productDetails.quantity > 50) { %>
                            <h6 style="color: rgb(226, 98, 24);">limited stock</h6>
                          <% } else if (pr.productDetails.quantity < 50 && pr.productDetails.quantity > 0) { %>
                            <h6 style="color: rgb(218, 26, 8);">hurry few left!</h6>
                          <% } %>
                          <%}else{%>
                             <h5 style="color: red;"><%=pr.productDetails.status%></h5>
                             <%}%>
                        </div>
                      </td>
                      <td class="quantity__item">
                        <div class="quantity">
                            <span class="qtybtn" onclick="decreaseQuantity('<%= pr.productDetails._id %>')">−</span>
                            <!-- Input box for quantity -->
                             <%if(pr.productDetails.status==="Out of Stock"){%>
                            <input id="qty-<%= pr.productDetails._id %>" type="text" value="<%= pr.quantity %>" readonly>
                            <%}else{%>
                                <input id="qty-<%= pr.productDetails._id %>" type="text" value="<%= pr.quantity %>" required>
                                <%}%>
                            <!-- Plus Icon -->
                            <span class="qtybtn" onclick="increaseQuantity('<%= pr.productDetails._id %>','<%=pr.productDetails.quantity%>','<%= pr.productDetails.status %>')">+</span>
                          </div>
                      </td>
                      <td class="cart__price">
                        <span id="item-total-<%= pr.productDetails._id %>">₹<%= pr.productDetails.salePrice * pr.quantity %></span>
                      </td>
                      <td class="cart__close">
                        <i class="fa fa-close" style="cursor:pointer;" onclick="removeFromCart('<%= pr.productDetails._id %>')"></i>
                      </td>
                    </tr>
                  <% }) %>
                <% } else { %>
                  <tr>
                    <td colspan="4" class="text-center">
                      <p class="lead mb-4">No items found in Cart</p>
                    </td>
                  </tr>
                <% } %>
              </tbody>
            </table>
          </div>
          <div class="row">
            <div class="col-lg-6 col-md-6 col-sm-6">
              <div class="continue__btn">
                <a href="/shop">Continue Shopping</a>
              </div>
            </div>
            <div class="col-lg-6 col-md-6 col-sm-6">
              <div class="continue__btn update__btn">
                <a href="/cart"><i class="fa fa-spinner"></i> Update cart</a>
              </div>
            </div>
          </div>
        </div>
        <!-- Coupon and Payment Summary -->
        <div class="col-lg-4 coupon-and-payment">
          <div class="cart__discount">
            
            
          </div>
          <div class="cart__total">
            <h6>Cart Total</h6>
            <ul>
              <li>Total items <span id="total-quantity" style="color:blue"><%= totalQuantity %></span></li>
              <li>Grand Total <span id="grand-regularTotal" >₹ <%= grandRegularTotal %></span></li>
              <li>Total Discount <span style="color: rgb(5, 111, 6);" id="discount-amount">-₹<%= grandRegularTotal - grandTotal %></span></li>
              <li>Handling Fee <span id="handling-fee" style="color:rgb(0, 0, 0)">₹ <%= handlingFee %></span></li>
              <li>Packaging Fee <span id="packaging-fee" style="color:rgba(0, 0, 0, 0.778)">₹<%= packagingFee %></span></li>
              <li>Delivery <span id="delivery-info" style="color: green;">Free</span></li>
              <li style="color:blue">Inclusive of all Taxes</li>
              <hr style=" border: 1px solid #757272; margin: 0 auto;">

              <li>Total Payable <span style="color: black;font-size: large;" id="grand-total">₹ <%= grandTotal  %></span></li>
            </ul>
            <a onclick="checkOut()" style="color: white; background-color: #111111;" class="btn primary-btnn">Proceed to checkout</a>
          </div>
          
        </div>
      </div>
    </div>
  </section>
  <!-- Shopping Cart Section End -->
  
<style>
    .product__cart__item__pic {
    width: 120px; /* Set the container width */
    height: 120px; /* Set the container height */
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden; /* Prevent overflow */
    border-radius: 8px; /* Optional: rounded corners */
}

.product-image {
    width: 100%; /* Make the image responsive */
    height: 100%;
    object-fit: cover; /* Ensures image covers the container while maintaining aspect ratio */
    border-radius: 8px; /* Match container border-radius */
}
.shopping__cart__table table tbody tr td.quantity__item {
  width: 175px;
}

.shopping__cart__table table tbody tr td.quantity__item .quantity {
  width: 80px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.shopping__cart__table table tbody tr td.quantity__item .quantity input {
  width: 50px;
  border: none;
  text-align: center;
  color: #111111;
  font-size: 16px;
  background: transparent;
}

.shopping__cart__table table tbody tr td.quantity__item .quantity .qtybtn {
  font-size: 16px;
  color: #888888;
  width: 30px;
  height: 30px;
  line-height: 25px;
  text-align: center;
  cursor: pointer;
  background: #f0f0f0;
  border: 1px solid #ddd;
  border-radius: 4px;
  margin: 0 5px;
}

.shopping__cart__table table tbody tr td.quantity__item .quantity .qtybtn:hover {
  background: #e0e0e0;
  color: #555;
}
.swal2-toast {
    font-size: 12px !important;  /* Adjust the font size here */
    font-family: 'Arial', sans-serif; 
}
</style>
<script>
  // Increase quantity by 1 for a specific item
  function increaseQuantity(itemId,productQuanity,status) {
  var $input = $('#qty-' + itemId);
  var currentQty = parseInt($input.val()) || 0;
  if(status ==="Out of Stock")
  {
    Swal.fire({
            title:`Sorry, this product is currently out of stock`,
            icon: 'error',
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
        });
        return 
  }
  if(currentQty>=productQuanity)
  {
    Swal.fire({
            title:`Sorry, we only have limited stock of this item `,
            icon: 'error',
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
        });
        return 
  }
  if (currentQty >= 5) {
    Swal.fire({
            title:"maximum quantity reached!",
            icon: 'error',
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
        });
    return;
  }
  
  var newQty = currentQty + 1;
  $input.val(newQty);

  updateCartQuantity(itemId, newQty);
}


  // Decrease quantity by 1 for a specific item (min 1)
  function decreaseQuantity(itemId) {
    var $input = $('#qty-' + itemId);
    var currentQty = parseInt($input.val()) || 0;
    if (currentQty > 1) {
      var newQty = currentQty - 1;
      $input.val(newQty);
      updateCartQuantity(itemId, newQty);
    }
  }

 
  function updateCartQuantity(itemId, newQuantity) {
    $.ajax({
      url: `/api/cart/item/${itemId}`,
      type: 'PUT',
      contentType: 'application/json',
      data: JSON.stringify({ itemId: itemId, quantity: newQuantity }),
      success: function(responseData) {
        if (responseData.success) {
          // Update the item's total price in the DOM
          $('#item-total-' + itemId).text('₹' + responseData.updatedItem.itemTotal);
          $('#grand-regularTotal').text('₹' +responseData.grandRegularTotal)
          $('#packaging-fee').text('₹' +responseData.packagingFee)
          $('#handling-fee').text('₹' +responseData.handlingFee)
          $('#total-quantity').text(responseData.totalQuantity);
          $('#grand-total').text('₹' + responseData.grandTotal)
          $('#discount-amount').text('-₹' + (responseData.grandRegularTotal - responseData.grandTotal));
        } else {
          alert(responseData.message || 'Failed to update cart');
        }
      },
      error: function(response) {
        Swal.fire({
            title:response.message,
            icon: 'error',
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
        });
      }
    });
  }
  
    // Function to remove a cart item via AJAX using jQuery
    function removeFromCart(itemId) {
  const swalWithBootstrapButtons = Swal.mixin({
    customClass: {
      confirmButton: "btn btn-success",
      cancelButton: "btn btn-danger"
    },
    buttonsStyling: false
  });
  
  swalWithBootstrapButtons.fire({
    title: "Are you sure?",
    text: "You won't be able to revert this!",
    icon: "warning",
    showCancelButton: true,
    confirmButtonText: "Yes, remove it!",
    cancelButtonText: "No, cancel!",
    reverseButtons: true
  }).then((result) => {
    if (result.isConfirmed) {
      $.ajax({
        url: '/remove-cart-item',
        type: 'POST',
        contentType: 'application/json',
        data: JSON.stringify({ itemId: itemId }),
        success: function(responseData) {
          if (responseData.success) {
            // Remove the item's row from the table
            $('tr[data-item-id="' + itemId + '"]').remove();
            // Update overall cart totals
            $('#total-quantity').text(responseData.totalQuantity);
            $('#grand-total').text('₹' + responseData.grandTotal);
            $('#discount-amount').text('-₹' + (responseData.grandRegularTotal - responseData.grandTotal));
            swalWithBootstrapButtons.fire({
              title: "Removed!",
              text: "Item has been removed.",
              icon: "success"
            }).then(() => {
              location.reload();
            });
          } else {
            swalWithBootstrapButtons.fire({
              title: "Error!",
              text: responseData.message || 'Failed to remove item',
              icon: "error"
            });
          }
        },
        error: function(err) {
          console.error('Error removing item:', err);
          swalWithBootstrapButtons.fire({
            title: "Error!",
            text: "An error occurred. Please try again later.",
            icon: "error"
          });
        }
      });
    } else if (result.dismiss === Swal.DismissReason.cancel) {
      swalWithBootstrapButtons.fire({
        title: "Cancelled",
        text: "Your item is safe :)",
        icon: "error"
      });
    }
  });
}

// checkout
function checkOut() {
  
  let outOfStockItems = [];
  let remainingItems = []; // Track available items

  // Check if products array exists and is not empty
  if (!products || !Array.isArray(products)) {
    console.error("Products array is not defined or invalid.");
    return;
  }

  console.log(products);

  // Loop through products to find out-of-stock and available items
  products.forEach(product => {
    if (product.productDetails && product.productDetails.status === "Out of Stock") {
      outOfStockItems.push(product.productDetails.productName); 
    } else {
      remainingItems.push(product); // Collect available items
    }
  });

  // If ALL products are out of stock
  if (products.length === outOfStockItems.length) {
    Swal.fire({
      title: "All Products Out of Stock",
      text: "All the products in your cart are out of stock. Please try again with another products.",
      icon: 'warning',
      toast: true,
      position: 'top-end',
      showConfirmButton: false,
      timer: 3000
    });
    return; // Stop checkout process
  }

  // If there are some out-of-stock items
  if (outOfStockItems.length > 0) {
    const swalWithBootstrapButtons = Swal.mixin({
      customClass: {
        confirmButton: "btn btn-success",
        cancelButton: "btn btn-danger"
      },
      buttonsStyling: false
    });

    swalWithBootstrapButtons.fire({
      title: "Out of Stock Items",
      html: `The following items are out of stock: <strong>${outOfStockItems.join(", ")}</strong>. <br> Do you want to proceed with the remaining items?`,
      icon: "warning",
      showCancelButton: true,
      confirmButtonText: "Yes, proceed",
      cancelButtonText: "No, cancel",
      reverseButtons: true
    }).then((result) => {
      if (result.isConfirmed) {
        if (remainingItems.length === 0) {
          // No items left in the cart after removing out-of-stock items
          Swal.fire({
            title: "Empty Cart",
            text: "No products are available to order.",
            icon: "error"
          });
        } else {
          window.location.href = `/checkout?cart=1`;
        }
      } else if (result.dismiss === Swal.DismissReason.cancel) {
        swalWithBootstrapButtons.fire({
          title: "Cancelled",
          text: "Your order has not been placed.",
          icon: "error"
        });
      }
    });
  } else {
    // No out-of-stock items, proceed normally
    window.location.href = `/checkout?cart=1`;
  }
}
</script>
  
  
<%-include("../../views/partials/user/footer.ejs")%>