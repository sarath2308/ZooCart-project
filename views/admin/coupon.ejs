<%-include("../../views/partials/admin/header.ejs")%>

<div class="profile container">
    <h2>All Coupons</h2>
    <a href="/admin/logout" class="btn btn-danger logout">Logout</a>
  </div>
  <br>
  <div class="d-flex mb-3 justify-content-end">
  <!-- Button to Open the Modal -->
<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#couponModal">
    Add Coupon
</button>
</div>
                 <!-- DataTable with user details -->
                 <table class="table" id="couponTable">
                    <thead>
                      <tr>
                        <th scope="col">code</th>
                        <th scope="col">created On</th>
                        <th scope="col">expiry</th>
                        <th scope="col">offer Price</th>
                        <th scope="col">minimum Purchase</th>
                        <th scope="col">is listed</th>
                        <th scope="col">status</th>
                        <th scope="col">Actions</th>
                      </tr>
                    </thead>
                    <tbody>
                      <% data.forEach((cou) => { %>
                        <tr>
                            <td><%= cou.code %></td>
                            <td><%= cou.createdOn.toISOString().split('T')[0] %></td>
                            <td><%= cou.expiredOn.toISOString().split('T')[0] %></td>
                            <td><%if(cou.offerPrice<100){%>
                            <%=cou.offerPrice %>%
                           <%}else{%>
                            â‚¹<%=cou.offerPrice%>
                            <%}%>
                        </td>
                            <td><%= cou.minimumPrice %></td>
                            <td>
                                <% if (cou.isList) { %>
                                    <span style="color: greenyellow;">Listed</span>
                                <% } else { %>
                                    <span style="color: rgb(210, 17, 14);">Not Listed</span>
                                <% } %>
                            </td>
                                <td>
                                    <% 
                                        const currentDate = new Date().getTime(); 
                                        const startDate = new Date(cou.createdOn).getTime();
                                        const expiredOn = new Date(cou.expiredOn).getTime();
                                
                                        if (currentDate < startDate) { %>
                                            <span style="color: blue;">Upcoming</span>
                                    <% } else if (currentDate >= startDate && currentDate <= expiredOn) { %>
                                            <span style="color: green;">Active</span>
                                    <% } else { %>
                                            <span style="color: red;">Expired</span>
                                    <% } %>
                                </td>
                            <td>
                                <%if(cou.isList){%>
                                    <button class="btn btn-danger" onclick="unlistCoupon('<%=cou._id%>')">Unlist</button>
                                    <%}else{%>
                                        <button class="btn btn-success" onclick="listCoupon('<%=cou._id%>')">list</button>
                                        <%}%>
                                        <button class="btn btn-info" data-bs-toggle="modal" onclick="populateModel('<%=cou._id%>','<%=cou.code%>','<%=cou.createdOn%>','<%=cou.expiredOn%>','<%=cou.offerPrice%>','<%=cou.minimumPrice%>')" data-bs-target="#couponEditModal">Edit</button>
                            </td>
                        </tr>
                        
                      <% }) %>
                    </tbody>
                  </table>
                  
      </div>
    
    <div class="modal fade" id="couponModal" tabindex="-1" aria-labelledby="couponModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="couponModalLabel">Add New Coupon</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="couponForm" action="/admin/add-coupon" method="post" onsubmit="return validateCoupon()">
                        <div class="mb-3">
                            <label for="couponCode" class="form-label">Coupon Code</label>
                            <input type="text" name="code" class="form-control" id="couponCode">
                        </div>
                        <div class="mb-3">
                            <label for="offerPrice" class="form-label">Offer Price</label>
                            <input type="number" name="offerPrice"class="form-control" id="offerPrice">
                        </div>
                        <div class="mb-3">
                            <label for="minimumPrice" class="form-label">Minimum Purchase</label>
                            <input type="number" name="minimumPrice" class="form-control" id="minimumPrice">
                        </div>
                        <div class="mb-3">
                            <label for="startDate" class="form-label">Start Date</label>
                            <input type="date" name="startDate" class="form-control" id="startDate">
                        </div>
                        <div class="mb-3">
                            <label for="expiredOn" class="form-label">Expiry Date</label>
                            <input type="date" name="expiryOn" class="form-control" id="expiredOn">
                        </div>
                      
                        <button type="submit" class="btn btn-success mt-3">add Coupon</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="couponEditModal" tabindex="-1" aria-labelledby="couponModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="couponModalLabel">Add New Coupon</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="couponForm" action="/admin/edit-coupon" method="post" onsubmit="return validateCouponEdit()">
                        <div class="mb-3">
                            <label for="couponCode" class="form-label">Coupon Code</label>
                            <input type="text" name="code" class="form-control" id="editCouponCode">
                        </div>
                        <input type="text" id="couponId" name="couponId" style="display: none;">
                        <div class="mb-3">
                            <label for="offerPrice" class="form-label">Offer Price</label>
                            <input type="number" name="offerPrice"class="form-control" id="editOfferPrice">
                        </div>
                        <div class="mb-3">
                            <label for="minimumPrice" class="form-label">Minimum Purchase</label>
                            <input type="number" name="minimumPrice" class="form-control" id="editMinimumPrice">
                        </div>
                        <div class="mb-3">
                            <label for="startDate" class="form-label">Start Date</label>
                            <input type="date" name="startDate" class="form-control" id="editStartDate">
                        </div>
                        <div class="mb-3">
                            <label for="expiredOn" class="form-label">Expiry Date</label>
                            <input type="date" name="expiryOn" class="form-control" id="editExpiredOn">
                        </div>
                      
                        <button type="submit" class="btn btn-success mt-3">update Coupon</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <script>
      function validateCoupon() {
    const code = document.getElementById("couponCode").value;
    const offerPrice = document.getElementById("offerPrice").value;
    const minimumPrice = document.getElementById("minimumPrice").value;
    const startDate = document.getElementById("startDate").value;
    const expiryDate = document.getElementById("expiredOn").value;

    // Check if all fields are filled
    if (code === '' || offerPrice === '' || minimumPrice === '' || startDate === '' || expiryDate === '') {
        Swal.fire({
            title: 'All fields are required',
            icon: 'error',
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
        });
        return false;
    }

    // Check if the code is at least 6 characters
    if (code.length < 6) {
        Swal.fire({
            title: 'Code should be at least 6 characters long',
            icon: 'error',
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
        });
        return false;
    }

    // Validate that offerPrice and minimumPrice are numbers
    if (isNaN(offerPrice) || isNaN(minimumPrice)) {
        Swal.fire({
            title: 'Offer Price and Minimum Price must be numbers',
            icon: 'error',
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
        });
        return false;
    }

    // Validate that offerPrice and minimumPrice are positive numbers
    if (offerPrice <= 0 || minimumPrice <= 0) {
        Swal.fire({
            title: 'Offer Price and Minimum Price should be greater than 0',
            icon: 'error',
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
        });
        return false;
    }

    // Check if expiry date is not before the start date
    if (new Date(expiryDate) <= new Date(startDate)) {
        Swal.fire({
            title: 'Expiry date must be after the start date',
            icon: 'error',
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
        });
        return false;
    }

    // All validations passed
    return true;
}


function validateCouponEdit() {
    const code = document.getElementById("editCouponCode").value;
    const offerPrice = document.getElementById("editOfferPrice").value;
    const minimumPrice = document.getElementById("editMinimumPrice").value;
    const startDate = document.getElementById("editStartDate").value;
    const expiryDate = document.getElementById("editExpiredOn").value;

    // Check if all fields are filled
    if (code === '' || offerPrice === '' || minimumPrice === '' || startDate === '' || expiryDate === '') {
        Swal.fire({
            title: 'All fields are required',
            icon: 'error',
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
        });
        return false;
    }

    // Check if the code is at least 6 characters
    if (code.length < 6) {
        Swal.fire({
            title: 'Code should be at least 6 characters long',
            icon: 'error',
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
        });
        return false;
    }

    // Validate that offerPrice and minimumPrice are numbers
    if (isNaN(offerPrice) || isNaN(minimumPrice)) {
        Swal.fire({
            title: 'Offer Price and Minimum Price must be numbers',
            icon: 'error',
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
        });
        return false;
    }

    // Validate that offerPrice and minimumPrice are positive numbers
    if (offerPrice <= 0 || minimumPrice <= 0) {
        Swal.fire({
            title: 'Offer Price and Minimum Price should be greater than 0',
            icon: 'error',
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
        });
        return false;
    }

    // Check if expiry date is not before the start date
    if (new Date(expiryDate) <= new Date(startDate)) {
        Swal.fire({
            title: 'Expiry date must be after the start date',
            icon: 'error',
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
        });
        return false;
    }

    // All validations passed
    return true;
}

    </script>
    
    <style>
        .table {
  border-collapse: separate;
  border-spacing: 0 15px;
  font-family: 'Poppins', sans-serif;
  font-size: 14px;
  background-color: #fff;
}

.table thead th {
  background:#2575fc ;
  color: white;
  padding: 12px;
  border: none;
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

.table tbody tr {
  background: #f4f6f9;
  transition: all 0.3s ease-in-out;
  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
}

.table tbody tr:hover {
  transform: translateY(-5px);
  box-shadow: 0px 6px 16px rgba(0, 0, 0, 0.15);
}

.table td {
  padding: 10px;
  border: none;
}

.btn {
  border-radius: 10px;
  padding: 5px 12px;
  font-size: 12px;
  text-transform: capitalize;
}
.coupons
{
  color: black !important;
}
td{
    padding:10px;
}

    </style>
    <script>
      $(document).ready(function () {
    $('#couponTable').DataTable({

    });
});

function populateModel(id, code, createdOn, expiredOn, offerPrice, minimumPrice) {
    console.log("coupon id:"+id);
    
    document.getElementById("couponId").value = id;
    document.getElementById("editCouponCode").value = code;
    document.getElementById("editOfferPrice").value = offerPrice;
    document.getElementById("editMinimumPrice").value = minimumPrice;

    // Format dates to 'YYYY-MM-DD'
    document.getElementById("editStartDate").value = formatDate(createdOn);
    document.getElementById("editExpiredOn").value = formatDate(expiredOn);
}

function formatDate(dateString) {
    if (!dateString) return ""; // Handle empty date
    const date = new Date(dateString);
    return date.toISOString().split("T")[0]; // Convert to YYYY-MM-DD
}


function listCoupon(cid) {
    const swalWithBootstrapButtons = Swal.mixin({
        customClass: {
            confirmButton: "btn btn-success",
            cancelButton: "btn btn-danger"
        },
        buttonsStyling: false
    });

    swalWithBootstrapButtons.fire({
        title: "Are you sure?",
        text: "You want to change the coupon listing status?",
        icon: "warning",
        showCancelButton: true,
        confirmButtonText: "Yes, update it!",
        cancelButtonText: "No, cancel!",
        reverseButtons: true
    }).then((result) => {
        if (result.isConfirmed) {
            // AJAX request to update listing status
            $.ajax({
                url: `/admin/coupon-list`,
                type: "POST",
                contentType: "application/json",  // Ensure JSON data is sent
                data: JSON.stringify({ cid }),   // Convert to JSON format
                success: function (response) {
                    if (response.success) {
                        swalWithBootstrapButtons.fire({
                            title: "Updated!",
                            text: "The coupon listing status has been changed.",
                            icon: "success"
                        }).then(() => location.reload()); // Reload page to reflect changes
                    } else {
                        swalWithBootstrapButtons.fire({
                            title: "Error",
                            text: response.message,
                            icon: "error"
                        });
                    }
                },
                error: function (xhr, status, error) {
                    console.error("AJAX Error:", error);
                    swalWithBootstrapButtons.fire({
                        title: "Error",
                        text: "Something went wrong! Try again.",
                        icon: "error"
                    });
                }
            });
        } else if (result.dismiss === Swal.DismissReason.cancel) {
            swalWithBootstrapButtons.fire({
                title: "Cancelled",
                text: "The coupon listing status remains unchanged.",
                icon: "error"
            });
        }
    });
}


function unlistCoupon(cid)
{

    const swalWithBootstrapButtons = Swal.mixin({
        customClass: {
            confirmButton: "btn btn-success",
            cancelButton: "btn btn-danger"
        },
        buttonsStyling: false
    });

    swalWithBootstrapButtons.fire({
        title: "Are you sure?",
        text: "You want to change the coupon listing status?",
        icon: "warning",
        showCancelButton: true,
        confirmButtonText: "Yes, update it!",
        cancelButtonText: "No, cancel!",
        reverseButtons: true
    }).then((result) => {
        if (result.isConfirmed) {
            // AJAX request to update listing status
            $.ajax({
                url: `/admin/coupon-unlist`,
                type: "POST",
                contentType: "application/json",  // Ensure JSON data is sent
                data: JSON.stringify({ cid }),   // Convert to JSON format
                success: function (response) {
                    if (response.success) {
                        swalWithBootstrapButtons.fire({
                            title: "Updated!",
                            text: "The coupon listing status has been changed.",
                            icon: "success"
                        }).then(() => location.reload()); // Reload page to reflect changes
                    } else {
                        swalWithBootstrapButtons.fire({
                            title: "Error",
                            text: response.message,
                            icon: "error"
                        });
                    }
                },
                error: function (xhr, status, error) {
                    console.error("AJAX Error:", error);
                    swalWithBootstrapButtons.fire({
                        title: "Error",
                        text: "Something went wrong! Try again.",
                        icon: "error"
                    });
                }
            });
        } else if (result.dismiss === Swal.DismissReason.cancel) {
            swalWithBootstrapButtons.fire({
                title: "Cancelled",
                text: "The coupon listing status remains unchanged.",
                icon: "error"
            });
        }
    });
}


    </script>
    <%-include("../../views/partials/admin/footer.ejs")%>