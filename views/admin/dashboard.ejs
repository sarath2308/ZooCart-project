<%-include("../../views/partials/admin/header.ejs")%>
<div class="p-4">
    <div class="welcome">
      <div class="content rounded-3 p-3">
        <h1 class="fs-3">Welcome to Dashboard</h1>
        <p class="mb-0">Hello Admin, welcome to your dashboard!</p>
      </div>
    </div>

    <section class="statistics mt-4">
      <div class="row">
        <div class="col-lg-4">
          <div class="box d-flex rounded-2 align-items-center mb-4 mb-lg-0 p-3">
              <i class="uil uil-chart-line fs-2 text-center bg-primary rounded-circle p-2"></i>
              <div class="ms-3">
                  <div class="d-flex align-items-center">
                      <h3 class="mb-0">₹<%= totalRevenue %></h3> 
                      <span class="d-block ms-2">Revenue</span>
                  </div>
              </div>
          </div>
      </div>
      
        <div class="col-lg-4">
          <div class="box d-flex rounded-2 align-items-center mb-4 mb-lg-0 p-3">
            <i class="uil-file fs-2 text-center bg-danger rounded-circle"></i>
            <div class="ms-3">
              <div class="d-flex align-items-center">
                <h3 class="mb-0"><%=totalSales%></h3> <span class="d-block ms-2"> Sales</span>
              </div>
            </div>
          </div>
        </div>
        <div class="col-lg-4">
          <div class="box d-flex rounded-2 align-items-center p-3">
            <i class="uil-users-alt fs-2 text-center bg-success rounded-circle"></i>
            <div class="ms-3">
              <div class="d-flex align-items-center">
                <h3 class="mb-0"><%=userCount%></h3> <span class="d-block ms-2">Users</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <section class="charts mt-4">
      <div class="row">
        <div class="col-lg-6">
          <div class="chart-container rounded-2 p-3">
            <h3 class="fs-6 mb-3">Sales <%= new Date().getFullYear() %>
            </h3>
            <canvas id="myChart"></canvas>
          </div>
        </div>
        <div class="col-lg-6">
          <div class="chart-container rounded-2 p-3">
            <h3 class="fs-6 mb-3">Monthly orders <%= new Date().getFullYear() %></h3>
            <canvas id="myChart2"></canvas>
          </div>
        </div>
      </div>
    </section>
  <%if(topTwo&&topTwo.length>1){%>
    <section class="admins mt-4">
      <div class="row">
        <div class="col-md-6">
          <div class="box">
            <!-- <h4>Admins:</h4> -->
            <div class="admin d-flex align-items-center p-3 mb-4">
              <div class="img">
                <img class="img-fluid "
                     width="75" height="75"
                     src="<%= topTwo[0].productImage[0]%>"
                     alt="admin">
              </div>
              <div class="ms-3">
                <h3 class="fs-5 mb-1">Top Selling #1</h3>
                <p class="mb-0"><%=topTwo[0].productName%></p>
              </div>
            </div>
          </div>
        </div>
        <div class="col-md-6">
          <div class="box">
            <!-- <h4>Moderators:</h4> -->
            <div class="admin d-flex align-items-center rounded-2 p-3 mb-4">
              <div class="img">
                <img class="img-fluid"
                     width="75" height="75"
                     src="<%= topTwo[1].productImage[0]%>"
                     alt="admin">
              </div>
              <div class="ms-3">
                <h3 class="fs-5 mb-1">Top Selling #2</h3>
                <p class="mb-0"><%= topTwo[1].productName%></p>
              </div>
            </div>
            
          </div>
        </div>
      </div>
    </section>
<%}%>
    <section class="statis mt-4 text-center">
      <div class="row">
        <div class="col-md-6 col-lg-3 mb-4 mb-lg-0">
          <div class="box bg-primary p-3">
            <i class="uil-eye"></i>
            <h3>₹<%= totalRefund.toLocaleString("en-IN") %></h3>
            <p class="lead">refund given</p>
          </div>
        </div>
        <div class="col-md-6 col-lg-3 mb-4 mb-lg-0">
          <div class="box bg-danger p-3">
            <i class="uil-user"></i>
            <h3><%=cancelledOrders%></h3>
            <p class="lead">cancellations</p>
          </div>
        </div>
        <div class="col-md-6 col-lg-3 mb-4 mb-md-0">
          <div class="box bg-warning p-3">
            <i class="uil-shopping-cart"></i>
            <h3><%=returnedOrders%></h3>
            <p class="lead">returns</p>
          </div>
        </div>
        <div class="col-md-6 col-lg-3">
          <div class="box bg-success p-3">
            <i class="uil-feedback"></i>
            <h3>₹<%=onlineRevenue.toLocaleString("en-IN")%></h3>
            <p class="lead">Transactions(online&wallet)</p>
          </div>
        </div>
      </div>
    </section>

    <section class="charts mt-4">
      <div class="chart-container p-3">
        <h3 class="fs-6 mb-3">Sales Report</h3>
        <div class="container mt-4">
          <div class="row mb-3">
            <div class="col-md-3">
              <label style="color:#9ca3af">Start Date:</label>
              <input type="date" id="startDate" class="form-control" onchange="updateEndDate()" max="">
          </div>
          <div class="col-md-3">
              <label style="color:#9ca3af">End Date:</label>
              <input type="date" id="endDate" class="form-control" min="" max="">
          </div>
          
          <script>
              document.addEventListener("DOMContentLoaded", function () {
                  let today = new Date().toISOString().split("T")[0];
          
                  // Set max attribute to prevent future dates
                  document.getElementById("startDate").setAttribute("max", today);
                  document.getElementById("endDate").setAttribute("max", today);
              });
          
              function updateEndDate() {
                  let startDate = document.getElementById("startDate").value;
                  let endDate = document.getElementById("endDate");
          
                  if (startDate) {
                      endDate.setAttribute("min", startDate); // Set min date for end date
                  }
              }
          </script>
          
              <div class="col-md-3 mt-4 ">
                <div class="dropdown">
                  <button class="btn btn-secondary dropdown-toggle" type="button" id="reportDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                      Select Report Type
                  </button>
                  <ul class="dropdown-menu" aria-labelledby="reportDropdown">
                      <li><a class="dropdown-item" onclick="handleReportSelection('weekly')">Weekly</a></li>
                      <li><a class="dropdown-item"  onclick="handleReportSelection('monthly')">Monthly</a></li>
                      <li><a class="dropdown-item"  onclick="handleReportSelection('yearly')">Yearly </a></li>
                  </ul>
              </div>
              </div>
              <div class="col-md-3 d-flex align-items-end">
                  <button class="btn btn-primary" onclick="filterOrders()">Filter</button>
                  <button class="btn btn-success ms-2" onclick="downloadExcel()">Export Excel</button>
                  <button class="btn btn-danger ms-2" onclick="downloadPDF()">Export PDF</button>
              </div>
          </div>
          
          <div class="card shadow-sm my-3" style="background-color: #9ca3af; color: white;">
            <div class="card-body p-0 ">
              <table style="background-color: #9ca3af; color: white;" class="table table-bordered table-striped table-hover mb-0" id="orderTable">
                <thead class="table-light">
                  <tr>
                    <th>No</th>
                    <th>Order ID</th>
                    <th>Date</th>
                    <th>Customer</th>
                    <th>Status</th>
                    <th>Total Discount</th>
                    <th>Coupon Discount</th>
                    <th>Total Amount</th>
                    <th>Payment Method</th>
                    <th>Payment status</th>
                  </tr>
                </thead>
                <tbody>
                  <% orders.forEach((order, i) => { %>
                    <tr>
                      <td><%= i + 1 %></td>
                      <td><%= order.orderId %></td>
                      <td><%= new Date(order.createdOn).toLocaleDateString() %></td>
                      <td><%= order.userId.name %></td>
                      <td>
                        <%if(order.status==='processing'){%>
                          <span style="color:orange">Processing</span>
                          <%}else if(order.status==='pending'){%>
                           <span style="color:rgb(230, 96, 7)">Pending</span>
                           <%}else if(order.status==='shipped'){%>
                               <span style="color:rgb(9, 58, 220)">shipped</span>
                           <%}else if(order.status==='delivered'){%>
                               <span style="color:rgb(9, 130, 17)">delivered</span>
                            <%}else if(order.status==='cancelled'){%>
                               <span style="color:rgb(245, 7, 7)">cancelled</span>
                               <%}else if(order.status==='Return Request'){%>
                                   <span style="color:rgb(168, 36, 10)">Return request</span>
                                   <%}else if(order.status==='Returned'){%>
                                       <span style="color:rgb(155, 35, 8)">Returned</span>
                                       <%}else if(order.status==='Return Rejected'){%>
                                         <span style="color:rgb(155, 35, 8)">Return Rejected</span>
                                         <%}%>
                      </td>
                      <td>₹<%=order.discount%></td>
                      <td>₹<%=order.couponApplied%></td>
                      <td>₹<%= order.finalAmount.toLocaleString() %></td>
                      <td><%= order.paymentMethod %></td>
                      <td>
                        <%if(order.paymentStatus){%>
                         <span style="color:green">Paid</span>
                         <%}else if(order.paymentMethod ==='online payment' && order.paymentStatus===false){%>
                          <span style="color:rgb(235, 67, 11)">payment unsuccess</span>
                          <%}else{%>
                          <span style="color:rgb(157, 85, 8)">pending</span>
                          <%}%>
                      </td>
                    </tr>
                  <% }) %>
                </tbody>
              </table>
            </div>
          </div>
          
          
          <div class="product-pagination">
            <% if (currentPage > 1) { %>
              <a class="btn btn-primary" onclick="changePage('<%= currentPage - 1 %>')">Prev</a>
            <% } %>
            <% for (let i = 1; i <= totalPages; i++) { %>
              <a class="btn btn-primary <%= currentPage === i ? 'active' : '' %>" onclick="changePage('<%= i %>')">
                <%= i %>
              </a>
            <% } %>
            <% if (currentPage < totalPages) { %>
              <a class="btn btn-primary" onclick="changePage('<%= currentPage + 1 %>')">Next</a>
            <% } %>
          </div>
      </div>
      <div class="toast-container">
        <div id="successToast" class="toast hide align-items-center text-white toast-success" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <strong class="me-auto">✔ Success</strong>
                <small>Just now</small>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body">
                Excel file downloaded successfully!
            </div>
        </div>
    </div>
      <script>
   let currentPage = '<%= currentPage %>';  // current page (from server)
   const limit = 10; 
  
          function filterOrders() {
    let startDate = $("#startDate").val();
    let endDate = $("#endDate").val();
    

    $.ajax({
        url: "/admin/filter",
        method: "GET",
        data: { startDate, endDate,currentPage,limit },
        success: function (response) {
            let tableBody = $("#orderTable tbody");
            tableBody.empty(); // Clear existing rows

            if (response.length === 0) {
                tableBody.append("<tr><td colspan='6' class='text-center'>No records found</td></tr>");
                return;
            }
            
            renderTable(response.orders);
            renderPagination( response.currentPage,response.totalPages);
        },
        error: function (xhr, status, error) {
            console.error("Error fetching filtered data:", error);
        }
    });
}

function renderTable(orders) {
    let tableBody = $("#orderTable tbody");
    tableBody.empty(); // Clear old data
    let paymentStatus;
    orders.forEach((order,i)=> {
      if(order.paymentStatus)
    {
       paymentStatus='paid'
    }
    else if(order.paymentStatus===false && order.paymentMethod==='online payment')
    {
       paymentStatus='payment unsuccess'
    }
    else
    {
      paymentStatus='pending'
    }
        tableBody.append(`
            <tr>
              <td>${i+1}</td>
                <td>${order.orderId}</td>
                <td>${new Date(order.createdOn).toLocaleDateString("en-GB")}</td>
                <td>${order.userId.name}</td>
                <td>${order.status}</td>
                 <td>₹${order.discount}</td>
                  <td>₹${order.couponApplied}</td>
                <td>₹${order.finalAmount}</td>
                 <td>${order.paymentMethod}</td>
                  <td>${paymentStatus}</td>
            </tr>
        `);
    });
}

function handleReportSelection(reportType) {
    // Set the date range based on the report type
    const today = new Date();
    let startDate, endDate;

    switch (reportType) {
        case 'weekly':
            startDate = new Date(today.setDate(today.getDate() - 7)).toISOString().split('T')[0];
            endDate = new Date().toISOString().split('T')[0];
            break;
        case 'monthly':
            startDate = new Date(today.setMonth(today.getMonth() - 1)).toISOString().split('T')[0];
            endDate = new Date().toISOString().split('T')[0];
            break;
        case 'yearly':
            startDate = new Date(today.setFullYear(today.getFullYear() - 1)).toISOString().split('T')[0];
            endDate = new Date().toISOString().split('T')[0];
            break;
        default:
            startDate = '';
            endDate = '';
    }

    // Set the date inputs correctly
    $("#startDate").val(startDate);
    $("#endDate").val(endDate);

    // Trigger filtering
    filterOrders();
}

window.changePage = function (pageNumber) {
      console.log('Changing to page:', pageNumber);
      console.log('Current page:', currentPage);
      currentPage = pageNumber;
      filterOrders();
    };

    // Render pagination links
    function renderPagination(currentPage, totalPages) {
      const paginationContainer = $('.product-pagination');
      paginationContainer.empty();

      if (currentPage > 1) {
        paginationContainer.append(`<a class="btn btn-info" href="javascript:void(0);" onclick="changePage(${currentPage - 1})">Prev</a>`);
      }
      for (let i = 1; i <= totalPages; i++) {
        paginationContainer.append(`
          <a class="btn btn-primary p-1 ${currentPage === i ? 'active' : ''}" href="javascript:void(0);" onclick="changePage(${i})">${i}</a>
        `);
      }
      if (currentPage < totalPages) {
        paginationContainer.append(`<a class="btn btn-info" href="javascript:void(0);" onclick="changePage(${currentPage + 1})">Next</a>`);
      }
    }


          function downloadExcel() {
            let startDate = $("#startDate").val();
           let endDate = $("#endDate").val();
           let search = $("#searchBox").val();

           window.location.href=`/admin/downloadExcel?startDate=${startDate}&endDate=${endDate}&search=${search}`
          }
  
          function downloadPDF() {
             
            let startDate = $("#startDate").val();
           let endDate = $("#endDate").val();
           let search = $("#searchBox").val();

           window.location.href=`/admin/downloadPdf?startDate=${startDate}&endDate=${endDate}&search=${search}`
          }
      </script>

        
      </div>
    </section>
  </div>
</section>
  <style>
      @import 'https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600&display=swap" rel="stylesheet';

:root {
--dk-gray-100: #F3F4F6;
--dk-gray-200: #E5E7EB;
--dk-gray-300: #D1D5DB;
--dk-gray-400: #9CA3AF;
--dk-gray-500: #6B7280;
--dk-gray-600: #4B5563;
--dk-gray-700: #374151;
--dk-gray-800: #1F2937;
--dk-gray-900: #111827;
--dk-dark-bg: #313348;
--dk-darker-bg: #2a2b3d;
--navbar-bg-color: #6f6486;
--sidebar-bg-color: #252636;
--sidebar-width: 250px;
}

* {
margin: 0;
padding: 0;
box-sizing: border-box;
}


#wrapper {
margin-left: var(--sidebar-width);
transition: all .3s ease-in-out;
}

#wrapper.fullwidth {
margin-left: 0;
}



/** --------------------------------
-- Sidebar
-------------------------------- */
.sidebar {
background-color: var(--sidebar-bg-color);
width: var(--sidebar-width);
transition: all .3s ease-in-out;
transform: translateX(0);
z-index: 9999999
}

.sidebar .close-aside {
position: absolute;
top: 7px;
right: 7px;
cursor: pointer;
color: #EEE;
}

.sidebar .sidebar-header {
border-bottom: 1px solid #2a2b3c
}

.sidebar .sidebar-header h5 a {
color: var(--dk-gray-300)
}

.sidebar .sidebar-header p {
color: var(--dk-gray-400);
font-size: .825rem;
}

.sidebar .search .form-control ~ i {
color: #2b2f3a;
right: 40px;
top: 22px;
}

.sidebar > ul > li {
padding: .7rem 1.75rem;
}

.sidebar ul > li > a {
color: var(--dk-gray-400);
text-decoration: none;
}

/* Start numbers */
.sidebar ul > li > a > .num {
line-height: 0;
border-radius: 3px;
font-size: 14px;
padding: 0px 5px
}

.sidebar ul > li > i {
font-size: 18px;
margin-right: .7rem;
color: var(--dk-gray-500);
}

.sidebar ul > li.has-dropdown > a:after {
content: '\eb3a';
font-family: unicons-line;
font-size: 1rem;
line-height: 1.8;
float: right;
color: var(--dk-gray-500);
transition: all .3s ease-in-out;
}

.sidebar ul .opened > a:after {
transform: rotate(-90deg);
}

/* Start dropdown menu */
.sidebar ul .sidebar-dropdown {
padding-top: 10px;
padding-left: 30px;
display: none;
}
.sidebar ul .sidebar-dropdown.active {
display: block;
}

.sidebar ul .sidebar-dropdown > li > a {
font-size: .85rem;
padding: .5rem 0;
display: block;
}
/* End dropdown menu */

.show-sidebar {
transform: translateX(-270px);
}

@media (max-width: 767px) {
.sidebar ul > li {
  padding-top: 12px;
  padding-bottom: 12px;
}

.sidebar .search {
  padding: 10px 0 10px 30px
}
}
@media (max-width: 767px) {
.sidebar.show-sidebar {
  transform: translateX(0);
}
.sidebar:not(.show-sidebar) {
  transform: translateX(-100%);
}
}




/** --------------------------------
-- welcome
-------------------------------- */
.welcome {
color: var(--dk-gray-300);
}

.welcome .content {
background-color: var(--dk-dark-bg);
}

.welcome p {
color: var(--dk-gray-400);
}




/** --------------------------------
-- Statistics
-------------------------------- */
.statistics {
color: var(--dk-gray-200);
}

.statistics .box {
background-color: var(--dk-dark-bg);
}

.statistics .box i {
width: 60px;
height: 60px;
line-height: 60px;
}

.statistics .box p {
color: var(--dk-gray-400);
}




/** --------------------------------
-- Charts
-------------------------------- */
.charts .chart-container {
background-color: var(--dk-dark-bg);
}

.charts .chart-container h3 {
color: var(--dk-gray-400)
}




/** --------------------------------
-- users
-------------------------------- */
.admins .box .admin {
background-color: var(--dk-dark-bg);
}

.admins .box h3 {
color: var(--dk-gray-300);
}

.admins .box p {
color: var(--dk-gray-400)
}




/** --------------------------------
-- statis
-------------------------------- */
.statis {
color: var(--dk-gray-100);
}

.statis .box {
position: relative;
overflow: hidden;
border-radius: 3px;
}

.statis .box h3:after {
content: "";
height: 2px;
width: 70%;
margin: auto;
background-color: rgba(255, 255, 255, 0.12);
display: block;
margin-top: 10px;
}

.statis .box i {
position: absolute;
height: 70px;
width: 70px;
font-size: 22px;
padding: 15px;
top: -25px;
left: -25px;
background-color: rgba(255, 255, 255, 0.15);
line-height: 60px;
text-align: right;
border-radius: 50%;
}


.main-color {
color: #ffc107
}


  </style>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
document.addEventListener('DOMContentLoaded', function () {
function $(selector) {
return document.querySelector(selector)
}

function find(el, selector) {
let finded
return (finded = el.querySelector(selector)) ? finded : null
}

function siblings(el) {
const siblings = []
for (let sibling of el.parentNode.children) {
  if (sibling !== el) {
    siblings.push(sibling)
  }
}
return siblings
}

const showAsideBtn = $('.show-side-btn')
const sidebar = $('.sidebar')
const wrapper = $('#wrapper')

showAsideBtn.addEventListener('click', function () {
$(`#${this.dataset.show}`).classList.toggle('show-sidebar')
wrapper.classList.toggle('fullwidth')
})

if (window.innerWidth < 767) {
sidebar.classList.add('show-sidebar');
}

window.addEventListener('resize', function () {
if (window.innerWidth > 767) {
  sidebar.classList.remove('show-sidebar')
}
})

// dropdown menu in the side nav
var slideNavDropdown = $('.sidebar-dropdown');



$('.sidebar .close-aside').addEventListener('click', function () {
$(`#${this.dataset.close}`).classList.add('show-sidebar')
wrapper.classList.remove('margin')
})


Chart.defaults.font.family = 'Inter, sans-serif';
Chart.defaults.font.size = 13;
Chart.defaults.font.color = '#71748c';

// // The bar chart
try {
            // Get sales data from EJS and convert to a number array
            const sales = <%= JSON.stringify(monthlySales) %> // Ensure it's an array
            console.log("✅ Sales Data:", sales, "Type:", typeof sales);

    // Now safely convert elements to numbers
    const salesNumbers = sales.map(Number);
    console.log("✅ Processed Sales Data:", salesNumbers);
            console.log("✅ Final Processed Sales Data:", sales);

            // Get current month (0 = Jan, 1 = Feb, ...)
            const currentMonth = new Date().getMonth();
            const filteredSales = sales.slice(0, currentMonth + 1);

            console.log("✅ Filtered Sales Data:", filteredSales);

            // Select the chart canvas
            const ctx1 = document.getElementById("myChart").getContext("2d");

            // Create the chart
            new Chart(ctx1, {
                type: "bar",
                data: {
                    labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
                        .slice(0, currentMonth + 1),
                    datasets: [{
                        label: "Total Sales (₹)",
                        data: filteredSales,
                        backgroundColor: "rgba(75, 192, 192, 0.2)",
                        borderColor: "rgba(75, 192, 192, 1)",
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: false, // Prevent auto-scaling issues
                            ticks: {
                                callback: function(value) {
                                    return value.toLocaleString(); // Format large numbers with commas
                                }
                            }
                        }
                    }
                }
            });

        } catch (error) {
            console.error(" Error in Chart Rendering:", error);
        }

 // Get sales data from EJS and convert to a number array
 const orders = <%= JSON.stringify(ordersArray) %> // Ensure it's an array
            console.log("✅ Sales Data:", orders, "Type:", typeof sales);

    // Now safely convert elements to numbers
    const orderNumbers = orders.map(Number);
    console.log("✅ Processed Sales Data:", orderNumbers);
            console.log("✅ Final Processed Sales Data:", orders);

            // Get current month (0 = Jan, 1 = Feb, ...)
            const currentMonth = new Date().getMonth();
            const filteredOrders = orders.slice(0, currentMonth + 1);

const ctx2 = document.getElementById('myChart2').getContext('2d');
const myChart2 = new Chart(ctx2, {
type: 'line',
data: {
  labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"].slice(0, currentMonth + 1),
  datasets: [{
    label: 'Orders',
    data: filteredOrders,
    backgroundColor: 'rgba(255, 99, 132, 0.2)',
    borderColor: 'rgba(255, 99, 132, 1)',
    borderWidth: 1
  }]
},
options: {
  scales: {
    y: {
      beginAtZero: true
    }
  }
}
});
})

</script>
    <%-include("../../views/partials/admin/footer.ejs")%>
