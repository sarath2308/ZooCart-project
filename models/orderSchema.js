const mongoose=require("mongoose")
const {Schema}=mongoose
const {v4:uuidv4}=require('uuid')
const orderSchema=new Schema({
   orderId:{
    type:String,
    default:()=>uuidv4(),
    unique:true
   },
   userId:{
   type:Schema.Types.ObjectId,
   ref:'User',
   required:true,
   },
   orderedItems:[{
    product:{
        type:Schema.Types.ObjectId,
        ref:"Product",
        required:true,
    },
    quantity:{
        type:Number,
        required:true
    },
    price:{
        type:Number,
        default:0
    }
   }],
   totalPrice:{
    type:Number,
    required:true
   },
   handlingFee:{
    type:Number,
    default:7
   },
   packagingFee:{
    type:Number,
     default:10,
   },
   deliveryCharge:{
    type:String,
    default:'Free'
   },
   discount:{
    type:Number,
    default:0
   },
   paymentMethod:{
     type:String,
     required:true
   },
   totalQuantity:{
    type:Number,
    default:1,
   },
   finalAmount:{
    type:Number,
    required:true,
   },
   address:{
    type:Schema.Types.ObjectId,
    ref:"address",
    required:true,
   },
   invoiceDate:{
    type:Date
   },
   status:{
    type:String,
    required:true,
    enum:['pending','processing','shipped','delivered','cancelled','Return Request','Returned']
   },
   createdOn:{
    type:Date,
    default:Date.now,
    required:true,
   },
   couponApplied:{
    type:Boolean,
    default:false,  
   },
   cancelReason:{
    type:String,
    required:false,
   }
})
const Order=mongoose.model("Order",orderSchema) ;
module.exports=Order;